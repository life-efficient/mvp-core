{"ast":null,"code":"var _jsxFileName = \"/home/ice/test/test/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport plus from \"../images/icons/plus.svg\";\nimport Button from './Button';\n\nconst make_dataset = (dataset, labels, color, label) => {\n  return {\n    label: label,\n    data: dataset,\n    fill: false,\n    lineTension: 0.6,\n    backgroundColor: color,\n    borderColor: color,\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: color,\n    pointBackgroundColor: color,\n    pointBorderWidth: 5,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: color,\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10\n  };\n};\n\nconst data = {\n  // labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [],\n  gridLines: [{\n    display: false\n  }]\n};\n\nclass LineChart extends Component {\n  render() {\n    data.labels = this.props.labels ? this.props.labels : [...Array(this.props.data.stints.length).keys()];\n    var labels = [...Array(this.props.data.stints.length).keys()]; // data.datasets[0].data = this.props.data.stints\n    // data.datasets[0].label = 'Stints'\n    // data.datasets[1].data = this.props.data.avails\n    // data.datasets[1].label = 'Availabilities'\n\n    var datasets = [this.props.data.stints, this.props.data.avails];\n    var data_labels = ['Stints', '\"Availabilities\"'];\n    var colors = ['#48C0C0', '#ff9b21'];\n\n    for (var i in colors) {\n      console.log(i);\n      data.datasets.push(make_dataset(datasets[i], labels, colors[i], data_labels[i]));\n    }\n\n    console.log(data.datasets);\n    return React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        width: '390px',\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        margin: '20px',\n        borderRadius: '1px',\n        padding: '10px',\n        backgroundColor: 'whitesmoke',\n        animationDelay: \"\".concat(0.1 * this.props.idx, \"s\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.title)), React.createElement(Line, {\n      data: // labels: 'yooo',\n      data // options={{backgroundColor: 'rgba(0, 0, 0, 0.5)'}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default LineChart;","map":{"version":3,"sources":["/home/ice/test/test/src/components/Chart.js"],"names":["React","Component","Line","Button","make_dataset","dataset","labels","color","label","data","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","datasets","gridLines","display","LineChart","render","props","Array","stints","length","keys","avails","data_labels","colors","i","console","log","push","width","margin","borderRadius","padding","animationDelay","idx","float","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport plus from \"../images/icons/plus.svg\"\nimport Button from './Button';\n\nconst make_dataset = (dataset, labels, color, label) => {\n  return {\n      label: label,\n      data: dataset,\n      fill: false,\n      lineTension: 0.6,\n      backgroundColor: color,\n      borderColor: color,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: color,\n      pointBackgroundColor: color,\n      pointBorderWidth: 5,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: color,\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10\n  }\n}\n\nconst data = {\n  // labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [],\n  gridLines: [{\n      display: false\n  }]\n}\n\nclass LineChart extends Component {\n\n  render() {\n\n    data.labels = this.props.labels ? this.props.labels : [...Array(this.props.data.stints.length).keys()]\n    var labels = [...Array(this.props.data.stints.length).keys()]\n    // data.datasets[0].data = this.props.data.stints\n    // data.datasets[0].label = 'Stints'\n    // data.datasets[1].data = this.props.data.avails\n    // data.datasets[1].label = 'Availabilities'\n    var datasets = [this.props.data.stints, this.props.data.avails]\n    var data_labels = ['Stints', '\"Availabilities\"']\n    var colors = ['#48C0C0', '#ff9b21']\n    for (var i in colors) {\n      console.log(i)\n      data.datasets.push(make_dataset(datasets[i], labels, colors[i], data_labels[i]))\n    }\n    console.log(data.datasets)\n    return (\n      <div className=\"\" \n        style={{\n          width: '390px',       backgroundColor: 'rgba(75,192,192,0.4)',\n          margin:'20px', \n          borderRadius: '1px', \n          padding: '10px', \n          backgroundColor: 'whitesmoke',\n          animationDelay: `${0.1*this.props.idx}s`\n        }} >\n        <div>\n          <div style={{float: 'left'}}>\n            {this.props.title}\n          </div>\n          {/* <Button>\n            <img style={{float: 'right', height: '15px'}} src={plus}/>\n          </Button> */}\n        </div>\n        {/* <div style={{backgroundColor: 'white'}}> */}\n\n        <Line data={\n            // labels: 'yooo',\n            data\n        } \n            // options={{backgroundColor: 'rgba(0, 0, 0, 0.5)'}}\n        />\n        {/* // height={40} width={2} options={{ maintainAspectRatio: false }} */}\n        {/* </div> */}\n      </div>\n    );\n  }\n};\n\nexport default LineChart"]},"metadata":{},"sourceType":"module"}