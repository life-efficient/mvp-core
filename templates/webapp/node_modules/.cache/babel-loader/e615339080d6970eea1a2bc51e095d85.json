{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/components/Payment.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { Elements, StripeProvider } from 'react-stripe-elements';\nimport \"./Payment.css\";\nimport Navbar from './Navbar'; // const stripe = window.Stripe('pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq');\n\nconst stripe = window.Stripe('pk_live_6QBiN2gcJ1SLqHxNP8hFsb6o00Bg8ug9gi');\nexport default class Payment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.redirectToCheckout = () => {\n      stripe.redirectToCheckout({\n        items: [{\n          plan: 'plan_FqoUfSsLWXasp2',\n          quantity: 1\n        }],\n        // items: [{plan: 'plan_FqndfuSZmDJnCZ', quantity: 1}],\n        // Do not rely on the redirect to the successUrl for fulfilling\n        // purchases, customers may not always reach the success_url after\n        // a successful payment.\n        // Instead use one of the strategies described in\n        // https://stripe.com/docs/payments/checkout/fulfillment\n        // successUrl: 'https://supermedia.io.s3-website-eu-west-1.amazonaws.com',\n        successUrl: 'https://supermedia.io/payment_confirmed',\n        cancelUrl: 'https://supermedia.io/payment_failed'\n      }).then(function (result) {\n        if (result.error) {\n          // If `redirectToCheckout` fails due to a browser or network\n          // error, display the localized error message to your customer.\n          var displayError = document.getElementById('error-message');\n          displayError.textContent = result.error.message;\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.redirectToCheckout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Checkout\")))) // <StripeProvider apiKey=\"pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq\">\n    //   <div className=\"example\">\n    //     <h1>React Stripe Elements Example</h1>\n    //     <Elements>\n    //       <CheckoutForm />\n    //     </Elements>\n    //   </div>\n    // </StripeProvider>\n    ;\n  }\n\n} // const createOptions = () => {\n//   return {\n//     style: {\n//       base: {\n//         fontSize: '16px',\n//         color: '#424770',\n//         fontFamily: 'Open Sans, sans-serif',\n//         letterSpacing: '0.05em',\n//         '::placeholder': {\n//           color: '#aab7c4',\n//         },\n//       },\n//       invalid: {\n//         color: '#c23d4b',\n//       },\n//     }\n//   }\n// };\n// class _CheckoutForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.submit = this.submit.bind(this);\n//   }\n//   async submit(ev) {\n//     let {token} = await this.props.stripe.createToken({name: \"Name\"});\n//     let response = await fetch(\"/charge\", {\n//       method: \"POST\",\n//       headers: {\"Content-Type\": \"text/plain\"},\n//       body: token.id\n//     });\n//     if (response.ok) console.log(\"Purchase Complete!\")\n//   }\n//   render() {\n//     if (this.state.complete) {console.log('purchase complete')}\n//     return (\n//       <div className=\"checkout panel\">\n//         <p>Would you like to complete the purchase?</p>\n//         <CardElement />\n//         <button onClick={this.submit}>Purchase</button>\n//       </div>\n//     );\n//   }\n// }\n// var CheckoutForm = injectStripe(_CheckoutForm);\n\nexport const PaymentConfirmed = () => {\n  return React.createElement(\"div\", {\n    className: \"panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Payment confirmed\"));\n};\nexport const PaymentFailed = () => {\n  return React.createElement(\"div\", {\n    className: \"panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Payment failed\"));\n};","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/components/Payment.js"],"names":["React","Component","CardElement","injectStripe","Elements","StripeProvider","Navbar","stripe","window","Stripe","Payment","redirectToCheckout","items","plan","quantity","successUrl","cancelUrl","then","result","error","displayError","document","getElementById","textContent","message","render","PaymentConfirmed","PaymentFailed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,uBAAxC;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,uBAAvC;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,4CAAd,CAAf;AAEA,eAAe,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAE7CU,kBAF6C,GAExB,MAAM;AACzBJ,MAAAA,MAAM,CAACI,kBAAP,CAA0B;AACxBC,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE,qBAAP;AAA8BC,UAAAA,QAAQ,EAAE;AAAxC,SAAD,CADiB;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,QAAAA,UAAU,EAAE,yCATY;AAUxBC,QAAAA,SAAS,EAAE;AAVa,OAA1B,EAYCC,IAZD,CAYM,UAAUC,MAAV,EAAkB;AACtB,YAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB;AACA;AACA,cAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAnB;AACAF,UAAAA,YAAY,CAACG,WAAb,GAA2BL,MAAM,CAACC,KAAP,CAAaK,OAAxC;AACD;AACF,OAnBD;AAoBD,KAvB4C;AAAA;;AAyB7CC,EAAAA,MAAM,GAAG;AACP,WACE,0CACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKd,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAFF,CAFA,CADF,CAYE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBF;AAqBD;;AA/C4C,C,CAkD/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMe,gBAAgB,GAAG,MAAM;AAClC,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAOH,CARM;AAUP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAOH,CARM","sourcesContent":["import React, {Component} from 'react';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport \"./Payment.css\"\nimport Navbar from './Navbar';\n// const stripe = window.Stripe('pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq');\nconst stripe = window.Stripe('pk_live_6QBiN2gcJ1SLqHxNP8hFsb6o00Bg8ug9gi');\n\nexport default class Payment extends Component {\n\n  redirectToCheckout = () => {\n    stripe.redirectToCheckout({ \n      items: [{plan: 'plan_FqoUfSsLWXasp2', quantity: 1}],\n      // items: [{plan: 'plan_FqndfuSZmDJnCZ', quantity: 1}],\n      // Do not rely on the redirect to the successUrl for fulfilling\n      // purchases, customers may not always reach the success_url after\n      // a successful payment.\n      // Instead use one of the strategies described in\n      // https://stripe.com/docs/payments/checkout/fulfillment\n      // successUrl: 'https://supermedia.io.s3-website-eu-west-1.amazonaws.com',\n      successUrl: 'https://supermedia.io/payment_confirmed',\n      cancelUrl: 'https://supermedia.io/payment_failed',\n    })\n    .then(function (result) {\n      if (result.error) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer.\n        var displayError = document.getElementById('error-message');\n        displayError.textContent = result.error.message;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <>\n      <Navbar />\n      <div className=\"body\">\n\n        <div className=\"panel\">\n          <button onClick={this.redirectToCheckout}>\n            Checkout\n          </button>\n        </div>\n      </div>\n      </>\n      // <StripeProvider apiKey=\"pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq\">\n      //   <div className=\"example\">\n      //     <h1>React Stripe Elements Example</h1>\n      //     <Elements>\n      //       <CheckoutForm />\n      //     </Elements>\n      //   </div>\n      // </StripeProvider>\n    );\n  }\n}\n\n// const createOptions = () => {\n//   return {\n//     style: {\n//       base: {\n//         fontSize: '16px',\n//         color: '#424770',\n//         fontFamily: 'Open Sans, sans-serif',\n//         letterSpacing: '0.05em',\n//         '::placeholder': {\n//           color: '#aab7c4',\n//         },\n//       },\n//       invalid: {\n//         color: '#c23d4b',\n//       },\n//     }\n//   }\n// };\n\n// class _CheckoutForm extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.submit = this.submit.bind(this);\n//   }\n\n//   async submit(ev) {\n//     let {token} = await this.props.stripe.createToken({name: \"Name\"});\n//     let response = await fetch(\"/charge\", {\n//       method: \"POST\",\n//       headers: {\"Content-Type\": \"text/plain\"},\n//       body: token.id\n//     });\n  \n//     if (response.ok) console.log(\"Purchase Complete!\")\n//   }\n\n//   render() {\n//     if (this.state.complete) {console.log('purchase complete')}\n\n//     return (\n//       <div className=\"checkout panel\">\n//         <p>Would you like to complete the purchase?</p>\n//         <CardElement />\n//         <button onClick={this.submit}>Purchase</button>\n//       </div>\n//     );\n//   }\n// }\n\n// var CheckoutForm = injectStripe(_CheckoutForm);\n\nexport const PaymentConfirmed = () => {\n    return (\n        <div className=\"panel\">\n            <div className=\"title\">\n                Payment confirmed \n            </div>\n        </div>\n    )\n}\n\nexport const PaymentFailed = () => {\n    return (\n        <div className=\"panel\">\n            <div className=\"title\">\n                Payment failed\n            </div>\n        </div>\n    )\n}\n\n "]},"metadata":{},"sourceType":"module"}