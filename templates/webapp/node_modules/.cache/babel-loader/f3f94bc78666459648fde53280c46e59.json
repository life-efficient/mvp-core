{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/components/Payment.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { Elements, StripeProvider } from 'react-stripe-elements';\nimport \"./Payment.css\";\nconst stripe = window.Stripe('pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq');\n\nclass Payment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.redirectToCheckout = () => {\n      stripe.redirectToCheckout({\n        items: [{\n          plan: 'plan_FqWheTang8spS3',\n          quantity: 1\n        }],\n        // Do not rely on the redirect to the successUrl for fulfilling\n        // purchases, customers may not always reach the success_url after\n        // a successful payment.\n        // Instead use one of the strategies described in\n        // https://stripe.com/docs/payments/checkout/fulfillment\n        successUrl: 'http://supermedia.io.s3-website-eu-west-1.amazonaws.com',\n        cancelUrl: 'https://your-website.com/canceled'\n      }).then(function (result) {\n        if (result.error) {\n          // If `redirectToCheckout` fails due to a browser or network\n          // error, display the localized error message to your customer.\n          var displayError = document.getElementById('error-message');\n          displayError.textContent = result.error.message;\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.redirectToCheckout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Checkout\") // <StripeProvider apiKey=\"pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq\">\n    //   <div className=\"example\">\n    //     <h1>React Stripe Elements Example</h1>\n    //     <Elements>\n    //       <CheckoutForm />\n    //     </Elements>\n    //   </div>\n    // </StripeProvider>\n    ;\n  }\n\n}\n\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        fontFamily: 'Open Sans, sans-serif',\n        letterSpacing: '0.05em',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#c23d4b'\n      }\n    }\n  };\n};\n\nclass _CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    let _ref = await this.props.stripe.createToken({\n      name: \"Name\"\n    }),\n        token = _ref.token;\n\n    let response = await fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: token.id\n    });\n    if (response.ok) console.log(\"Purchase Complete!\");\n  }\n\n  render() {\n    if (this.state.complete) {\n      console.log('purchase complete');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"checkout panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Would you like to complete the purchase?\"), React.createElement(CardElement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Purchase\"));\n  }\n\n}\n\nvar CheckoutForm = injectStripe(_CheckoutForm);\nexport default Payment;","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/components/Payment.js"],"names":["React","Component","CardElement","injectStripe","Elements","StripeProvider","stripe","window","Stripe","Payment","redirectToCheckout","items","plan","quantity","successUrl","cancelUrl","then","result","error","displayError","document","getElementById","textContent","message","render","createOptions","style","base","fontSize","color","fontFamily","letterSpacing","invalid","_CheckoutForm","constructor","props","submit","bind","ev","createToken","name","token","response","fetch","method","headers","body","id","ok","console","log","state","complete","CheckoutForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport {Elements, StripeProvider} from 'react-stripe-elements';\nimport \"./Payment.css\"\nconst stripe = window.Stripe('pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq');\n\n\nclass Payment extends Component {\n\n  redirectToCheckout = () => {\n    stripe.redirectToCheckout({ \n      items: [{plan: 'plan_FqWheTang8spS3', quantity: 1}],\n      // Do not rely on the redirect to the successUrl for fulfilling\n      // purchases, customers may not always reach the success_url after\n      // a successful payment.\n      // Instead use one of the strategies described in\n      // https://stripe.com/docs/payments/checkout/fulfillment\n      successUrl: 'http://supermedia.io.s3-website-eu-west-1.amazonaws.com',\n      cancelUrl: 'https://your-website.com/canceled',\n    })\n    .then(function (result) {\n      if (result.error) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer.\n        var displayError = document.getElementById('error-message');\n        displayError.textContent = result.error.message;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <button onClick={this.redirectToCheckout}>\n        Checkout\n      </button>\n      // <StripeProvider apiKey=\"pk_test_98UmCoevgIbIlIhQ23DgfoPq00nJOgxucq\">\n      //   <div className=\"example\">\n      //     <h1>React Stripe Elements Example</h1>\n      //     <Elements>\n      //       <CheckoutForm />\n      //     </Elements>\n      //   </div>\n      // </StripeProvider>\n    );\n  }\n}\n\nconst createOptions = () => {\n  return {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        fontFamily: 'Open Sans, sans-serif',\n        letterSpacing: '0.05em',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#c23d4b',\n      },\n    }\n  }\n};\n\nclass _CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    let {token} = await this.props.stripe.createToken({name: \"Name\"});\n    let response = await fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"text/plain\"},\n      body: token.id\n    });\n  \n    if (response.ok) console.log(\"Purchase Complete!\")\n  }\n\n  render() {\n    if (this.state.complete) {console.log('purchase complete')}\n\n    return (\n      <div className=\"checkout panel\">\n        <p>Would you like to complete the purchase?</p>\n        <CardElement />\n        <button onClick={this.submit}>Purchase</button>\n      </div>\n    );\n  }\n}\n\nvar CheckoutForm = injectStripe(_CheckoutForm);\n\n\nexport default Payment;"]},"metadata":{},"sourceType":"module"}