{"ast":null,"code":"import _defineProperty from \"/home/ice/tempmvp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ice/tempmvp/src/general/Recommendation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { makePostRequest } from \"../api_calls.js\";\nimport \"./Recommendation.css\";\nimport undo from \"../images/icons/undo.png\";\nimport { connect } from \"react-redux\";\n\nclass Recommendation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.rejectRecommendation = () => {\n      var body = {\n        rec: [this.props.rec],\n        action: 'remove' //this.setState({rejected: 'rejected'})               // set to 'rejected' so that case is matched in getOptions\n\n      };\n      makePostRequest('update-recommendation?', body, () => {\n        console.log('request made');\n        this.props.refresh();\n      });\n    };\n\n    this.unrejectRecommendation = () => {\n      this.setState({\n        rejected: false\n      });\n\n      var body = _objectSpread({}, this.props.rec, {\n        action: 'unreject'\n      });\n\n      makePostRequest('update-recommendation', body, () => {\n        console.log('request made');\n        this.props.refresh();\n      });\n    };\n\n    this.getOptions = () => {\n      switch (this.props.rec.status) {\n        case 'rejected' || this.state.rejected:\n          return React.createElement(\"div\", {\n            className: \"rec-rejection rec-response medium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, \"Rejected\", React.createElement(\"img\", {\n            className: \"unreject\",\n            src: undo,\n            onClick: this.unrejectRecommendation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }));\n\n        case 'not yet recommended':\n          return React.createElement(\"button\", {\n            className: \"btn\",\n            onClick: this.rejectRecommendation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Remove from order\");\n\n        case 'recommended':\n          return React.createElement(\"div\", {\n            className: \"medium rec-response\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Recommended\");\n\n        default:\n          return null;\n      }\n    };\n\n    this.state = {\n      rejected: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"recommendation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.rec.img_urls[0],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.getOptions());\n  }\n\n}\n\nexport default Recommendation;","map":{"version":3,"sources":["/home/ice/tempmvp/src/general/Recommendation.js"],"names":["React","Component","makePostRequest","undo","connect","Recommendation","constructor","props","rejectRecommendation","body","rec","action","console","log","refresh","unrejectRecommendation","setState","rejected","getOptions","status","state","render","img_urls"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,eAAR,QAA+B,iBAA/B;AACA,OAAO,sBAAP;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,oBAPmB,GAOI,MAAM;AACzB,UAAIC,IAAI,GAAG;AAACC,QAAAA,GAAG,EAAE,CAAC,KAAKH,KAAL,CAAWG,GAAZ,CAAN;AAAwBC,QAAAA,MAAM,EAAE,QAAhC,CACX;;AADW,OAAX;AAGAT,MAAAA,eAAe,CAAC,wBAAD,EAA2BO,IAA3B,EACX,MAAM;AACFG,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAKN,KAAL,CAAWO,OAAX;AACH,OAJU,CAAf;AAMH,KAjBkB;;AAAA,SAmBnBC,sBAnBmB,GAmBM,MAAM;AAC3B,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;;AACA,UAAIR,IAAI,qBAAO,KAAKF,KAAL,CAAWG,GAAlB;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,QAAR;;AACAT,MAAAA,eAAe,CAAC,uBAAD,EAA0BO,IAA1B,EACX,MAAM;AACFG,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAKN,KAAL,CAAWO,OAAX;AACH,OAJU,CAAf;AAMH,KA5BkB;;AAAA,SA8BnBI,UA9BmB,GA8BN,MAAM;AACf,cAAQ,KAAKX,KAAL,CAAWG,GAAX,CAAeS,MAAvB;AACI,aAAK,cAAc,KAAKC,KAAL,CAAWH,QAA9B;AACI,iBACI;AAAK,YAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEI;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,GAAG,EAAEd,IAA/B;AAAqC,YAAA,OAAO,EAAE,KAAKY,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;;AAMJ,aAAK,qBAAL;AACI,iBACI;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,OAAO,EAAE,KAAKP,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ;;AAKJ,aAAK,aAAL;AACI,iBAAO;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;;AAGJ;AACI,iBAAO,IAAP;AAnBR;AAqBH,KApDkB;;AAEf,SAAKY,KAAL,GAAa;AACTH,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAiDDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKd,KAAL,CAAWG,GAAX,CAAeY,QAAf,CAAwB,CAAxB,CAAV;AAAsC,MAAA,GAAG,EAAC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKJ,UAAL,EAFL,CADJ;AAMH;;AA9DkC;;AAiEvC,eAAeb,cAAf","sourcesContent":["import React, { Component } from \"react\"\nimport {makePostRequest } from \"../api_calls.js\"\nimport \"./Recommendation.css\"\nimport undo from \"../images/icons/undo.png\"\nimport { connect } from \"react-redux\"\n\nclass Recommendation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rejected: null\n        }\n    }\n\n    rejectRecommendation = () => {\n        var body = {rec: [this.props.rec], action: 'remove'}\n        //this.setState({rejected: 'rejected'})               // set to 'rejected' so that case is matched in getOptions\n\n        makePostRequest('update-recommendation?', body, \n            () => {\n                console.log('request made')\n                this.props.refresh()\n            }\n        )\n    }\n\n    unrejectRecommendation = () => {\n        this.setState({rejected: false})\n        var body = {...this.props.rec, action: 'unreject'}\n        makePostRequest('update-recommendation', body, \n            () => {\n                console.log('request made')\n                this.props.refresh()\n            }\n        )\n    }\n\n    getOptions = () => {\n        switch (this.props.rec.status) {\n            case 'rejected' || this.state.rejected:\n                return (\n                    <div className=\"rec-rejection rec-response medium\">\n                        Rejected\n                        <img className=\"unreject\" src={undo} onClick={this.unrejectRecommendation} />\n                    </div>\n                )\n            case 'not yet recommended':\n                return (\n                    <button className=\"btn\" onClick={this.rejectRecommendation}>\n                        Remove from order\n                    </button>\n                )\n            case 'recommended':\n                return <div className=\"medium rec-response\">\n                    Recommended\n                </div>\n            default:\n                return null    \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"recommendation\">\n                <img src={this.props.rec.img_urls[0]} alt=\"\" />\n                {this.getOptions()}\n            </div>\n        )\n    }\n}\n\nexport default Recommendation "]},"metadata":{},"sourceType":"module"}