{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/general/Login.js\";\nimport React, { Component } from \"react\";\nimport \"./Login.css\";\nimport logo from \"../images/Adla.png\";\nimport eye from \"../images/see-icon.png\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"aws-amplify\";\nimport { Redirect } from \"react-router-dom\";\nimport ChangePassword from \"./ChangePassword\";\nimport Loading from \"./Loading\";\nimport queryString from \"query-string\";\nimport Dropdown from \"../general/form_components/Dropdown\";\nimport Navbar from \"../landingComponents/Navbar\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      window.analytics.page('login');\n    };\n\n    this.validateForm = () => {\n      return this.state.username.length > 0 && this.state.password.length > 0;\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.handleSubmit = async event => {\n      this.setState({\n        loading: true\n      });\n      console.log('submitting');\n      event.preventDefault();\n\n      try {\n        var user = await Auth.signIn(this.state.username, this.state.password);\n\n        if (user.challengeName === 'NEW_PASSWORD_REQUIRED') {\n          this.setState({\n            panel: \"changePassword\"\n          });\n        } else {\n          this.props.dispatchLogin();\n          console.log(this.props.logged_in);\n          Auth.currentSession().then(data => {// console.log('session data:', user)\n          });\n          this.setState({\n            redirect: this.props.location.state ? this.props.location.state.from : '/app'\n          }, () => {\n            console.log('redirected');\n          });\n        }\n      } catch (err) {\n        //   if (err.code === 'UserNotConfirmedException') {\n        //     // The error happens if the user didn't finish the confirmation step when signing up\n        //     // In this case you need to resend the code and confirm the user\n        //     // About how to resend the code and confirm the user, please check the signUp part\n        // } else if (err.code === 'PasswordResetRequiredException') {\n        //     // The error happens when the password is reset in the Cognito console\n        //     // In this case you need to call forgotPassword to reset the password\n        //     // Please check the Forgot Password part.\n        // } else if (err.code === 'NotAuthorizedException') {\n        //     // The error happens when the incorrect password is provided\n        // } else if (err.code === 'UserNotFoundException') {\n        //     // The error happens when the supplied username/email does not exist in the Cognito user pool\n        // } else {\n        this.setState({\n          error: 'Incorrect username or password'\n        });\n        console.log(err); // }\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.showPassword = () => {\n      var type = this.state.passwordFieldType;\n      var newType = type === \"password\" ? \"input\" : \"password\";\n      this.setState({\n        passwordFieldType: newType\n      });\n      console.log(this.state);\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        console.log('redirecting to:', this.state.redirect);\n        return React.createElement(Redirect, {\n          to: this.state.redirect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.getPanel = () => {\n      // console.log(this.state)\n      console.log('login props:', this.props);\n\n      switch (this.state.panel) {\n        case \"login\":\n          return React.createElement(React.Fragment, null, this.renderRedirect(), React.createElement(\"div\", {\n            className: \"body\",\n            style: {\n              backgroundColor: 'var(--green)'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"slide\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo,\n            className: \"main-logo\",\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"field-container long-field-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"field-title \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Username\")), React.createElement(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: this.state.username,\n            className: \"text-response\",\n            placeholder: \"\",\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"field-container long-field-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"field-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"Password\")), React.createElement(\"input\", {\n            type: this.state.passwordFieldType,\n            id: \"password\",\n            value: this.state.password,\n            className: \"text-response\",\n            placeholder: \"\",\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          })), React.createElement(\"img\", {\n            src: eye,\n            id: \"passwordShow\",\n            className: \"btn passwordShow\",\n            onClick: this.showPassword,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"form-error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, this.state.error), React.createElement(\"div\", {\n            className: \"small get-details\",\n            onClick: () => {\n              this.setState({\n                panel: 'get-details'\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"Don't know your details?\"), React.createElement(\"button\", {\n            type: \"submit\",\n            onClick: this.handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, this.state.loading ? React.createElement(Loading, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }) : \"Submit\")))));\n\n        case \"changePassword\":\n          if (!this.state.user) {\n            var user = Auth.signIn(this.state.username, this.state.password).then(user => {\n              this.setState({\n                user: user\n              });\n            });\n          }\n\n          console.log('user:', this.state.user);\n          return this.state.user ? React.createElement(ChangePassword, {\n            user: this.state.user,\n            from: this.props.location.state ? this.props.location.state.from : null,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }) : null;\n\n        case \"get-details\":\n          return React.createElement(React.Fragment, null, this.renderRedirect(), React.createElement(\"div\", {\n            className: \"slide\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo,\n            className: \"main-logo\",\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"field-container long-field-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"field-title \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, \"How are you in contact with adla?\")), React.createElement(\"input\", {\n            className: \"text-response\",\n            prompt: \"Instagram\",\n            value: this.state.username,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"field-container long-field-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"field-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, \"Password\")), React.createElement(\"input\", {\n            type: this.state.passwordFieldType,\n            id: \"password\",\n            value: this.state.password,\n            className: \"text-response\",\n            placeholder: \"\",\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          })), React.createElement(\"img\", {\n            src: eye,\n            id: \"passwordShow\",\n            className: \"btn passwordShow\",\n            onClick: this.showPassword,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"form-error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, this.state.error), React.createElement(\"div\", {\n            className: \"small get-details\",\n            onClick: () => {\n              this.setState({\n                panel: 'get-details'\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, \"Don't know your details?\"), React.createElement(\"button\", {\n            onClick: this.handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, this.state.loading ? React.createElement(Loading, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }) : \"Submit\"))));\n\n        default:\n          return null;\n      }\n    };\n\n    var params = queryString.parse(window.location.search); // console.log('params:', params)\n\n    this.state = {\n      username: params.u ? params.u : \"\",\n      password: params.p ? params.p : \"\",\n      passwordFieldType: \"password\",\n      redirect: null,\n      panel: \"login\",\n      user: null,\n      loading: false,\n      error: null\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.getPanel()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    logged_in: state.user.logged_in\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogin: () => {\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }\n  };\n};\n\nexport default Login = connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/general/Login.js"],"names":["React","Component","logo","eye","connect","Auth","Redirect","ChangePassword","Loading","queryString","Dropdown","Navbar","Login","constructor","props","componentDidMount","window","analytics","page","validateForm","state","username","length","password","handleChange","event","setState","target","id","value","console","log","handleSubmit","loading","preventDefault","user","signIn","challengeName","panel","dispatchLogin","logged_in","currentSession","then","data","redirect","location","from","err","error","showPassword","type","passwordFieldType","newType","renderRedirect","getPanel","backgroundColor","params","parse","search","u","p","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login.css\";\nimport logo from \"../images/Adla.png\"\nimport eye from \"../images/see-icon.png\"\nimport { connect } from \"react-redux\"\nimport { Auth } from \"aws-amplify\"\nimport { Redirect } from \"react-router-dom\"\nimport ChangePassword from \"./ChangePassword\"\nimport Loading from \"./Loading\"\nimport queryString from \"query-string\"\nimport Dropdown from \"../general/form_components/Dropdown\";\nimport Navbar from \"../landingComponents/Navbar\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    var params = queryString.parse(window.location.search)\n    // console.log('params:', params)\n    this.state = {\n      username: params.u ? params.u : \"\",\n      password: params.p ? params.p : \"\",\n      passwordFieldType: \"password\",\n      redirect: null,\n      panel: \"login\",\n      user: null,\n      loading: false,\n      error: null\n    };\n  }\n\n  componentDidMount = () => {\n      window.analytics.page('login')\n  }\n\n  validateForm = () => {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    },\n      () => {\n          console.log(this.state)\n      }\n    );\n  }\n\n  handleSubmit = async event => {\n    this.setState({loading: true})\n    console.log('submitting')\n    event.preventDefault();\n    try {\n      var user = await Auth.signIn(\n        this.state.username,\n        this.state.password\n      )\n      if (user.challengeName === 'NEW_PASSWORD_REQUIRED') {\n          this.setState({panel: \"changePassword\"})\n      }\n      else {\n        this.props.dispatchLogin()\n        console.log(this.props.logged_in)\n        Auth.currentSession()\n        .then(\n          data => {\n            // console.log('session data:', user)\n          }\n        )\n        this.setState({redirect: this.props.location.state ? this.props.location.state.from : '/app'},\n          () => {\n              console.log('redirected')\n          }\n        )\n      }\n    } catch (err) {\n    //   if (err.code === 'UserNotConfirmedException') {\n    //     // The error happens if the user didn't finish the confirmation step when signing up\n    //     // In this case you need to resend the code and confirm the user\n    //     // About how to resend the code and confirm the user, please check the signUp part\n    // } else if (err.code === 'PasswordResetRequiredException') {\n    //     // The error happens when the password is reset in the Cognito console\n    //     // In this case you need to call forgotPassword to reset the password\n    //     // Please check the Forgot Password part.\n    // } else if (err.code === 'NotAuthorizedException') {\n    //     // The error happens when the incorrect password is provided\n    // } else if (err.code === 'UserNotFoundException') {\n    //     // The error happens when the supplied username/email does not exist in the Cognito user pool\n    // } else {\n        this.setState({error: 'Incorrect username or password'})\n        console.log(err);\n    // }\n    }\n    this.setState({loading: false})\n  }\n\n  showPassword = () => {\n    var type = this.state.passwordFieldType\n    var newType = type === \"password\" ? \"input\" : \"password\"\n    this.setState({passwordFieldType: newType})\n    console.log(this.state)\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      console.log('redirecting to:', this.state.redirect)\n      return <Redirect to={this.state.redirect} />\n    }\n  }\n\n  getPanel = () => {\n    // console.log(this.state)\n    console.log('login props:', this.props)\n    switch (this.state.panel) {\n      case \"login\":\n        return (\n          <>\n          {this.renderRedirect()}\n          <div className=\"body\" style={{backgroundColor: 'var(--green)'}}>\n            <div className=\"slide\">\n            <div className=\"form-container\">\n                <img src={ logo } className=\"main-logo\" alt=\"\" />\n                <div className=\"field-container long-field-title\">\n                    <div className=\"field-title \">\n                        <strong>Username</strong>\n                    </div>\n                    <input type=\"text\" id=\"username\" value={this.state.username} className=\"text-response\" placeholder=\"\" onChange={ this.handleChange }/>\n                </div>\n                <div className=\"field-container long-field-title\">\n                    <div className=\"field-title\">\n                    <strong>Password</strong>\n                    </div>\n                    <input type={ this.state.passwordFieldType } id=\"password\" value={this.state.password} className=\"text-response\" placeholder=\"\"  onChange={ this.handleChange }/>\n                  </div>\n                  <img src={ eye } id=\"passwordShow\" className=\"btn passwordShow\" onClick={ this.showPassword } alt=\"\" />\n                  <div className=\"form-error\">{this.state.error}</div>\n                  <div className=\"small get-details\" onClick={() => {this.setState({panel: 'get-details'})}}>\n                      Don't know your details?\n                  </div>\n                  <button type=\"submit\" onClick={this.handleSubmit}>\n                      {\n                        this.state.loading ?\n                        <Loading /> :\n                        \"Submit\"\n                      }\n                  </button>\n                </div>\n\n            </div>\n          </div>\n          </>\n        )\n      case \"changePassword\":\n        if (!this.state.user) {\n            var user = Auth.signIn(this.state.username, this.state.password)\n            .then(\n              (user) => {\n                this.setState({user: user})\n              }\n            )\n        }\n        console.log('user:', this.state.user)\n        return this.state.user ? <ChangePassword user={this.state.user} from={this.props.location.state ? this.props.location.state.from : null}/> : null\n      case \"get-details\":\n        return (\n          <>\n\n          {this.renderRedirect()}\n          <div className=\"slide\">\n          <div className=\"form-container\">\n              <img src={ logo } className=\"main-logo\" alt=\"\" />\n              <div className=\"field-container long-field-title\">\n                  <div className=\"field-title \">\n                      <strong>How are you in contact with adla?</strong>\n                  </div>\n                  <input className=\"text-response\" prompt=\"Instagram\" value={this.state.username} /> \n              </div>\n              <div className=\"field-container long-field-title\">\n                  <div className=\"field-title\">\n                  <strong>Password</strong>\n                  </div>\n                  <input type={ this.state.passwordFieldType } id=\"password\" value={this.state.password} className=\"text-response\" placeholder=\"\"  onChange={ this.handleChange }/>\n                </div>\n                <img src={ eye } id=\"passwordShow\" className=\"btn passwordShow\" onClick={ this.showPassword } alt=\"\" />\n                <div className=\"form-error\">{this.state.error}</div>\n                <div className=\"small get-details\" onClick={() => {this.setState({panel: 'get-details'})}}>\n                    Don't know your details?\n                </div>\n                <button onClick={this.handleSubmit}>\n                    {\n                      this.state.loading ?\n                      <Loading /> :\n                      \"Submit\"\n                    }\n                </button>\n              </div>\n          </div>\n          </>\n        )\n\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n      {/* <Navbar /> */}\n      <div className=\"body\">\n        {this.getPanel()}\n      </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    logged_in: state.user.logged_in\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        dispatchLogin: () => {\n            dispatch({\n                type: \"LOG_IN\"\n            })\n        }\n    }\n}\n\nexport default Login = connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}