{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/components/Styleboards.js\";\nimport React, { Component } from \"react\";\nimport \"./Styleboards.css\";\nimport { Auth, Storage } from \"aws-amplify\";\n/*import plus from \"../images/icons/plus.svg\"\nimport { uploadFile } from 'react-s3';\nimport { file } from \"@babel/types\";*/\n\nimport uuid from \"uuid\";\n\nclass StyleboardImage extends Component {\n  render() {\n    return React.createElement(\"img\", {\n      src: this.props.src,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass StyleboardColumn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getImgs = () => {\n      var srcs = this.props.srcs;\n      var imgs = [];\n      srcs.map(src => {\n        imgs.push(React.createElement(StyleboardImage, {\n          src: src,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      });\n      console.log('THIS COLUMNS IMAGES', imgs);\n      return imgs;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.getImgs());\n  }\n\n}\n\nexport default class Styleboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      window.analytics.page('styleboards');\n    };\n\n    this.addImg = e => {\n      console.log('adding image'); // UPLOAD FILE\n\n      var files = e.target.files;\n      /*\n      const config = {\n          bucketName: 'Adla-data',\n          dirName: 'uploads', \n          region: 'eu-west-1',\n      }\n      */\n\n      for (var i = 0; i < files.length; i++) {\n        var fp = \"styleboard_uploads/\".concat(uuid.v4());\n        var url;\n        Storage.put(fp, files[i]).then(result => {\n          url = \"https://s3-eu-west-1.amazonaws.com/Adla-data/public/\".concat(fp);\n          console.log('URL:', url);\n          var i = this.state.imgs;\n          console.log(i);\n          console.log(typeof i);\n          i.push(url);\n          this.setState({\n            imgs: i\n          });\n          return url;\n        }).then(url => {\n          Auth.currentSession().then(data => {\n            var IDToken = data.getIdToken().getJwtToken();\n            console.log('adding this to users styleboard json:', url);\n            var options = {\n              method: 'POST',\n              mode: 'cors',\n              body: JSON.stringify([url]),\n              headers: {\n                \"Authorization\": IDToken,\n                'Content-Type': 'application/json'\n              }\n            };\n            fetch(\"https://ikpilfsw9a.execute-api.eu-west-2.amazonaws.com/prod/add-to-style-board\", options) // ADD FILE TO STYLEBOARD JSON\n            .then(data => {\n              console.log('done adding');\n              console.log(data);\n            });\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n\n    Auth.currentSession().then(data => {\n      console.log('cognito response:', data);\n      var IDToken = data.getIdToken().getJwtToken();\n      var options = {\n        method: 'GET',\n        headers: {\n          \"Authorization\": IDToken\n        }\n      };\n      fetch('https://ikpilfsw9a.execute-api.eu-west-2.amazonaws.com/prod/get-styleboards', options).then(data => data.json()).then(data => {\n        console.log(data);\n        data = JSON.parse(data.body);\n        console.log(data);\n\n        if (data == null) {\n          this.setState({\n            imgs: []\n          });\n        } else {\n          this.setState({\n            imgs: data\n          });\n        }\n      });\n    });\n    this.state = {\n      name: 'first styleboard',\n      ready: true,\n      imgs: []\n    };\n  }\n\n  render() {\n    if (this.state.ready) {\n      let c1 = [],\n          c2 = [],\n          c3 = [],\n          c4 = [];\n      var cols = [c1, c2, c3, c4];\n\n      for (var idx = 0; idx < this.state.imgs.length; idx++) {\n        var col_idx = idx % cols.length;\n        cols[col_idx].push(this.state.imgs[idx]);\n      }\n\n      console.log('COLS', cols);\n      return React.createElement(\"div\", {\n        className: \"body\",\n        id: \"styleboards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"My styleboard\"), React.createElement(\"div\", {\n        className: \"board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, c1.length !== 0 ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(StyleboardColumn, {\n        srcs: c1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(StyleboardColumn, {\n        srcs: c2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(StyleboardColumn, {\n        srcs: c3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(StyleboardColumn, {\n        srcs: c4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"empty-styleboard-prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Press the button below to add images to your styleboard\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Fill this styleboard with pictures of styles that you like.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"I can use this to help find exactly what you're after. You can even ask me to find you clothes that match what's on this styleboard!\"))), React.createElement(\"div\", {\n        className: \"btn styleboard_upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"add_img\",\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        accept: \"image/*\",\n        name: \"img\",\n        onChange: this.addImg,\n        multiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"add_img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Add images\")));\n    } else return null;\n  }\n\n}","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/components/Styleboards.js"],"names":["React","Component","Auth","Storage","uuid","StyleboardImage","render","props","src","StyleboardColumn","getImgs","srcs","imgs","map","push","console","log","Styleboard","constructor","componentDidMount","window","analytics","page","addImg","e","files","target","i","length","fp","v4","url","put","then","result","state","setState","currentSession","data","IDToken","getIdToken","getJwtToken","options","method","mode","body","JSON","stringify","headers","fetch","catch","err","json","parse","name","ready","c1","c2","c3","c4","cols","idx","col_idx","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport \"./Styleboards.css\"\nimport { Auth, Storage } from \"aws-amplify\"\n/*import plus from \"../images/icons/plus.svg\"\nimport { uploadFile } from 'react-s3';\nimport { file } from \"@babel/types\";*/\nimport uuid from \"uuid\"\n\n\nclass StyleboardImage extends Component {\n    render() {\n        return (\n            <img src={this.props.src} alt=\"\" />\n        )\n    } \n}\n\nclass StyleboardColumn extends Component {\n\n    getImgs = () => {\n        var srcs = this.props.srcs\n        var imgs = []\n        srcs.map(\n            (src) => {\n                imgs.push(<StyleboardImage src={src} />)\n            }\n        )\n        console.log('THIS COLUMNS IMAGES', imgs)\n        return imgs\n        \n    }\n\n    render() {\n        return (\n            <div className=\"column\">\n                {this.getImgs()}\n            </div>\n        )\n    }\n}\n\nexport default class Styleboard extends Component {\n    constructor(props) {\n        super(props)\n        Auth.currentSession()\n        .then(\n            data => {\n                console.log('cognito response:', data)\n                var IDToken = data.getIdToken().getJwtToken()\n                var options = {\n                    method: 'GET',\n                    headers: {\n                        \"Authorization\": IDToken,\n                    }\n                }\n                fetch('https://ikpilfsw9a.execute-api.eu-west-2.amazonaws.com/prod/get-styleboards', options)\n                .then(data => data.json())\n                .then(\n                    data => {\n                        console.log(data)\n                        data = JSON.parse(data.body)\n                        console.log(data)\n                        if (data == null) {\n                            this.setState({imgs: []})\n                        }\n                        else {\n                            this.setState({imgs: data})\n                        }\n                    }\n                )\n            }\n        )\n        this.state = {\n            name: 'first styleboard',\n            ready: true,\n            imgs: []\n        }\n    }\n\n    componentDidMount = () => {\n        window.analytics.page('styleboards')\n    }\n\n    addImg = (e) => {\n        console.log('adding image')\n\n        // UPLOAD FILE\n        var files = e.target.files\n        /*\n        const config = {\n            bucketName: 'Adla-data',\n            dirName: 'uploads', \n            region: 'eu-west-1',\n        }\n        */\n        for (var i=0; i<files.length; i++) {\n            var fp = `styleboard_uploads/${uuid.v4()}`\n            var url\n            Storage.put(fp, files[i])\n            .then(\n                result => {\n                    url =`https://s3-eu-west-1.amazonaws.com/Adla-data/public/${fp}`\n                    console.log('URL:', url)\n                    var i = this.state.imgs\n                    console.log(i)\n                    console.log(typeof(i))\n                    i.push(url)\n                    this.setState({imgs: i})\n                    return url\n                }\n            )\n            .then(\n                url => {\n                    Auth.currentSession()\n                    .then(\n                        data => {\n                            var IDToken = data.getIdToken().getJwtToken()\n                            console.log('adding this to users styleboard json:', url)\n                            var options = {\n                                method: 'POST',\n                                mode: 'cors',\n                                body: JSON.stringify([url]),\n                                headers: {\n                                    \"Authorization\": IDToken,\n                                    'Content-Type': 'application/json'\n                                }\n                            }\n                            fetch(\"https://ikpilfsw9a.execute-api.eu-west-2.amazonaws.com/prod/add-to-style-board\", options)    // ADD FILE TO STYLEBOARD JSON\n                            .then(\n                                data => {\n                                    console.log('done adding')\n                                    console.log(data)\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n            .catch(err => console.log(err))\n        }\n    }\n\n    render() {\n        if (this.state.ready) {\n            let c1=[], c2=[], c3=[], c4=[]\n            var cols = [c1, c2, c3, c4]\n\n            for (var idx = 0; idx < this.state.imgs.length; idx++) {\n                var col_idx = idx % cols.length\n                cols[col_idx].push(this.state.imgs[idx])\n            }\n\n            console.log('COLS', cols)\n\n            return (\n                <div className=\"body\" id=\"styleboards\">\n                    <div className=\"panel-title\">My styleboard</div>\n                    <div className=\"board\">\n                        {(c1.length !== 0) ? \n                            <React.Fragment>\n                                <StyleboardColumn srcs={c1} />\n                                <StyleboardColumn srcs={c2} />\n                                <StyleboardColumn srcs={c3} />\n                                <StyleboardColumn srcs={c4} />\n                            </React.Fragment>\n                            :\n                            <div className=\"empty-styleboard-prompt\">\n                                <div>\n                                    Press the button below to add images to your styleboard\n                                </div>\n                                <div>\n                                    Fill this styleboard with pictures of styles that you like.\n                                </div>\n                                <div>\n                                    I can use this to help find exactly what you're after. You can even ask me to find you clothes that match what's on this styleboard!\n                                </div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"btn styleboard_upload\">\n                        <input id=\"add_img\" type=\"file\" style={{display: \"none\"}} accept=\"image/*\" name=\"img\" onChange={this.addImg} multiple />\n                        <label for=\"add_img\">Add images</label>\n                    </div>\n                </div>\n            )\n        }\n        else return null\n    }\n}"]},"metadata":{},"sourceType":"module"}