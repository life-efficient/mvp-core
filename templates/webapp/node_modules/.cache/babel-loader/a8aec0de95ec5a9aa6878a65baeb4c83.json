{"ast":null,"code":"var _jsxFileName = \"/home/ice/test/test/src/components/Brands.js\";\nimport React, { Component } from \"react\"; //import { Route, Link } from \"react-router-dom\"\n\nimport { Redirect } from \"react-router-dom\";\nimport \"./store.css\";\nimport \"./Brands.css\";\nimport { Auth } from \"aws-amplify\";\nimport { connect } from \"react-redux\"; // import { updateUserDetails } from \"../api_calls\"\n\nimport Navbar from \"./Navbar\";\nimport { makePostRequest } from \"../api_calls\";\nimport sendIcon from \"../images/icons/send.svg\";\nimport Loading from \"../general/Loading\";\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n}\n\nconst images = importAll(require.context('../images/brands', false, /\\.(png|jpe?g|svg)$/));\n\nclass BrandBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps !== this.props) {\n        this.setState({\n          liked: this.props.liked\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        liked: this.props.liked\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        liked: !this.state.liked\n      }, () => {\n        this.props.toggleLike(this.props.brand, this.state.liked);\n      });\n    };\n\n    console.log(this.props.liked);\n    this.state = {};\n  }\n\n  render() {\n    //console.log(this.props.brand, 'is liked?', this.state.liked)\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: this.props.brand,\n      className: \"radio_btn\",\n      type: \"radio\",\n      checked: this.state.liked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: this.props.brand,\n      className: \"quiz_option brand_label\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Brands extends Component {\n  constructor(props) {\n    super(props); // GET ICONS BY RUNNING PYTHON FILE OUTPUT_BRAND_ICONS.PY IN WEBAPP AND THEN COPYING BRAND_ICONS.JS  \n\n    this.handleOptionChange = e => {\n      // console.log(e.target)\n      // console.log(e.target.id)\n      // console.log(this.props.brands.includes(e.target.id))\n      console.log(this.state.brands);\n      var brands = this.props.brands;\n      console.log('BRAND:', e);\n\n      if (brands.includes(e.target.id)) {\n        console.log('removing brand');\n        brands = brands.filter(item => {\n          return item != e.target.id;\n        });\n      } else {\n        console.log('adding brand');\n        brands.push(e.target.id);\n      }\n\n      this.props.onChange(brands);\n    };\n\n    this.handleRequestChange = e => {\n      this.setState({\n        request: e.target.value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.submitRequest = () => {\n      var request = this.state.request.toLowerCase();\n\n      if (request != '') {\n        this.setState({\n          request: '' // request_loading: true\n\n        });\n        this.handleOptionChange({\n          target: {\n            id: request\n          }\n        });\n        makePostRequest('feature-request', {\n          type: 'new brand request',\n          request: request\n        }, () => {\n          console.log('brand requested');\n        });\n      }\n    };\n\n    this.icons = [\"images/brands/champion.png\", \"images/brands/alyx.jpg\", \"images/brands/supreme.png\", \"images/brands/forever_21.png\", \"images/brands/allsaints.png\", \"images/brands/oh_polly.png\", \"images/brands/helmut_lang.png\", \"images/brands/princess_polly.png\", \"images/brands/chanel.png\", \"images/brands/vesper.png\", \"images/brands/yeezy.png\", \"images/brands/vans.png\", \"images/brands/shein.png\", \"images/brands/bec_and_bridge.png\", \"images/brands/balenciaga.jpg\", \"images/brands/levis.png\", \"images/brands/dollskill.jpeg\", \"images/brands/moon_river.jpg\", \"images/brands/&_other_stories.png\", \"images/brands/acne_studios.png\", \"images/brands/american_apparel.png\", \"images/brands/moschino.png\", \"images/brands/calvin_klein.png\", \"images/brands/nike.jpg\", \"images/brands/primark.png\", \"images/brands/tommy_hilfiger.png\", \"images/brands/unif.png\", \"images/brands/faithfull.png\", \"images/brands/bershka.png\", \"images/brands/pacsun.png\", \"images/brands/goodhood.png\", \"images/brands/valfre.png\", \"images/brands/axel_arigato.png\", \"images/brands/580b57fcd9996e24bc43c4f2.png\", \"images/brands/o_mighty.jpg\", \"images/brands/comme-des-garcons.png\", \"images/brands/lacoste.png\", \"images/brands/urban_outfitters.png\", \"images/brands/monki.png\", \"images/brands/minga.png\", \"images/brands/margiela.png\", \"images/brands/reformation.png\", \"images/brands/zara.png\", \"images/brands/boohoo.png\", \"images/brands/The Ragged Priest.png\", \"images/brands/realisation_par.png\", \"images/brands/for_love_of_lemons.png\", \"images/brands/gymshark.png\", \"images/brands/ralph_lauren.png\", \"images/brands/lululemon.jpg\", \"images/brands/h&m.png\", \"images/brands/pull_and_bear.png\", \"images/brands/american_eagle.png\", \"images/brands/topshop.png\", \"images/brands/never_fully_dressed.png\", \"images/brands/asos.png\", \"images/brands/gucci.png\", \"images/brands/steve_madden.svg\", \"images/brands/calvin_klein.jpg\"]; // this.icons = this.shuffle(this.icons)\n\n    this.state = {\n      allBrands: this.icons,\n      ready: true,\n      btns: [] // brands: []\n\n    };\n  } // componentDidUpdate = () => {\n  //     console.log(this.props.styles)\n  //     console.log(this.state.styles)\n  //     if (this.props.styles && this.state.styles != this.props.styles) {      // if style props passed and state is not equal\n  //         this.setState({styles: this.props.styles})                          // equate the styles\n  //     }\n  // }\n\n\n  render() {\n    console.log('PROPS:', this.props);\n    console.log('BRANDS:', this.props.brands);\n    var brands = this.props.brands;\n    var allBrands = this.state.allBrands;\n    return React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Brands you love\"), React.createElement(\"div\", {\n      className: \"\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        height: '60vh',\n        overflowY: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, allBrands.sort((b1, b2) => {\n      b1 = b1.split('.')[0].split('/').pop();\n      b2 = b2.split('.')[0].split('/').pop();\n\n      if (b1 > b2) {\n        return 1;\n      }\n\n      if (b2 > b1) {\n        return -1;\n      }\n    }).map(item => {\n      // console.log(item)\n      var brand = item.split('.')[0].split('/').pop();\n      var img = item.split('/').slice(-1);\n      console.log(this.props.brands.includes(brand));\n      var opacity = brands.includes(brand) ? '1' : '0.5';\n      return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n        for: brand,\n        onClick: this.handleOptionChange,\n        style: {\n          opacity\n        },\n        value: brands.includes(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: brand,\n        className: \"brand_label img_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"radio_btn\",\n        type: \"radio\",\n        checked: brands.includes(brand),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        id: brand,\n        src: images[img],\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))));\n    })), React.createElement(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Enter your own brand!\")), React.createElement(\"div\", {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.request,\n      onChange: this.handleRequestChange,\n      className: \"text-response\",\n      placeholder: \"Enter a missing brand...\",\n      style: {\n        fontSize: '13px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submitRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.request_loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: sendIcon,\n      brand: {\n        height: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    brands: state.user.brands ? state.user.brands : []\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: update => {\n      console.log(update);\n      console.log(window.endpoint_prefix);\n      makePostRequest(\"\".concat(window.endpoint_prefix, \"/details\"), {\n        brands: update\n      }, () => {\n        console.log('brands updated');\n      });\n      dispatch({\n        type: \"SET_USER\",\n        update: {\n          brands: update\n        }\n      });\n    }\n  };\n}; // shuffle = (arr) => {\n//     var j, x, i;\n//     for (i = arr.length - 1; i > 0; i--) {\n//         j = Math.floor(Math.random() * (i + 1));\n//         x = arr[i];\n//         arr[i] = arr[j];\n//         arr[j] = x;\n//     }\n//     return arr;\n// }\n//     componentDidUpdate = () => {\n//         console.log(this.props.brands)\n//         console.log(this.state.brands)\n//         if (this.props.brands && this.state.brands != this.props.brands) {      // if brand props passed and state is not equal\n//             this.setState({brands: this.props.brands})                          // equate the brands\n//         }\n//     }\n//     componentDidMount = () => {\n//         window.analytics.page('brands')\n//     }\n//     componentDidUpdate(prevProps){\n//         console.log('checking did update')\n//         console.log(prevProps.brands)\n//         console.log(this.props.brands)\n//         if(prevProps.brands !== this.props.brands){ \n//             makePostRequest('user-info', {brands: this.props.brands},\n//                 () => {\n//                     console.log('yo')\n//                 }\n//             )\n//         }\n//     }\n//     toggleLike = (brand) => {\n//         console.log('toggling')\n//         if (this.props.brands.includes(brand)) {\n//             this.props.unlikeBrand(brand)\n//             window.analytics.track('brand unliked', {brand: brand})\n//         }\n//         else {\n//             this.props.likeBrand(brand)\n//             window.analytics.track('brand liked', {brand: brand})\n//         }\n//     }\n//     getBtns = (icons) => {\n//         console.log('getting btns')\n//         var btns = icons.map(\n//             icon => {\n//                 var brand = icon.split('.')[0].split('/').pop()\n//                 var img = icon.split('/').slice(-1)\n//                 //var liked = this.state.liked.includes(brand)\n//                 var liked = this.props.brands.includes(brand)\n//                 console.log('BRAND', brand, 'LIKED:', liked)\n//                 return (<BrandBtn img={images[img]} brand={brand} liked={liked} toggleLike={this.toggleLike}/>)\n//             }\n//         )\n//         return btns\n//     }\n//     render() {\n//         console.log('brands from redux:', this.props.brands)\n//         return (\n//             <>\n//             <Navbar back={true} />\n//             <div className=\"body brands-body\" brand={{backgroundColor: '#BCA2F2'}}>\n//                 <div className=\"panel-title\">Brands you love</div>\n//                 <div className=\"small\">Select any brands that you love</div>\n//                 <div className=\"small\">Here's some of the most popular to start with</div>\n//                 <div className=\"grid-response\" id=\"brands\">\n//                     {this.getBtns(this.icons)}\n//                 </div>\n//                 {/*<input className=\"text-response not-required extra-detail\" id=\"custom_brands_i_love\" placeholder=\"Any others?\" />*/}\n//                 {/*\n//                 <div className=\"brands-searchbar-container\">\n//                     <div className=\"brands-searchbar-panel\">\n//                         <input className=\"brands-searchbar\" />\n//                         <div className=\"brands-search-icon\">s</div>\n//                     </div>\n//                 </div>\n//                 */}\n//             </div>\n//             </>\n//         )\n//     }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         likeBrand: (brand) => {\n//             console.log('liking')\n//             dispatch({\n//                 type: \"LIKE_BRAND\",\n//                 brand: brand\n//             })\n//         },\n//         unlikeBrand: (brand) => {\n//             console.log('unliking brand')\n//             dispatch({\n//                 type: \"UNLIKE_BRAND\",\n//                 brand: brand\n//             })\n//         }\n//     }\n// }\n// const mapStateToprops = (state) => {\n//     console.log(state.user)\n//     return {\n//         brands: state.user.brands ? state.user.brands : [],\n//     }\n// }\n\n\nexport default Brands = connect(mapStateToProps, mapDispatchToProps)(Brands);","map":{"version":3,"sources":["/home/ice/test/test/src/components/Brands.js"],"names":["React","Component","Redirect","Auth","connect","Navbar","makePostRequest","Loading","importAll","r","images","keys","map","item","index","replace","require","context","BrandBtn","constructor","props","componentDidUpdate","prevProps","setState","liked","componentDidMount","handleClick","state","toggleLike","brand","console","log","render","img","Brands","handleOptionChange","e","brands","includes","target","id","filter","push","onChange","handleRequestChange","request","value","submitRequest","toLowerCase","type","icons","allBrands","ready","btns","display","flexWrap","justifyContent","height","overflowY","sort","b1","b2","split","pop","slice","opacity","marginTop","fontSize","request_loading","sendIcon","mapStateToProps","user","mapDispatchToProps","dispatch","update","window","endpoint_prefix"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n//import { Route, Link } from \"react-router-dom\"\nimport { Redirect } from \"react-router-dom\"\nimport \"./store.css\"\nimport \"./Brands.css\"\nimport { Auth } from \"aws-amplify\"\nimport { connect } from \"react-redux\"\n// import { updateUserDetails } from \"../api_calls\"\nimport Navbar from \"./Navbar\"\nimport { makePostRequest } from \"../api_calls\";\nimport sendIcon from \"../images/icons/send.svg\"\nimport Loading from \"../general/Loading\"\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n  return images;\n}\n\nconst images = importAll(require.context('../images/brands', false, /\\.(png|jpe?g|svg)$/));\n\nclass BrandBtn extends Component {\n    constructor(props) {\n        super(props)\n        console.log(this.props.liked)\n        this.state = {\n        }\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps !== this.props) {\n            this.setState({liked: this.props.liked})\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({liked: this.props.liked})\n    }\n    \n    handleClick = () => {\n        this.setState({liked: !this.state.liked}, () => {\n            this.props.toggleLike(this.props.brand, this.state.liked)\n        })\n    }\n\n    render() {\n        //console.log(this.props.brand, 'is liked?', this.state.liked)\n        return (\n            <React.Fragment>\n                <input id={this.props.brand} className=\"radio_btn\" type=\"radio\" checked={this.state.liked} />\n                <label for={this.props.brand} className=\"quiz_option brand_label\" onClick={this.handleClick}>\n                    <img src={this.props.img} alt=\"\"/>\n                </label>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Brands extends Component {\n    constructor(props) {\n        super(props)\n        // GET ICONS BY RUNNING PYTHON FILE OUTPUT_BRAND_ICONS.PY IN WEBAPP AND THEN COPYING BRAND_ICONS.JS  \n        this.icons = [\"images/brands/champion.png\", \"images/brands/alyx.jpg\", \"images/brands/supreme.png\", \"images/brands/forever_21.png\", \"images/brands/allsaints.png\", \"images/brands/oh_polly.png\", \"images/brands/helmut_lang.png\", \"images/brands/princess_polly.png\", \"images/brands/chanel.png\", \"images/brands/vesper.png\", \"images/brands/yeezy.png\", \"images/brands/vans.png\", \"images/brands/shein.png\", \"images/brands/bec_and_bridge.png\", \"images/brands/balenciaga.jpg\", \"images/brands/levis.png\", \"images/brands/dollskill.jpeg\", \"images/brands/moon_river.jpg\", \"images/brands/&_other_stories.png\", \"images/brands/acne_studios.png\", \"images/brands/american_apparel.png\", \"images/brands/moschino.png\", \"images/brands/calvin_klein.png\", \"images/brands/nike.jpg\", \"images/brands/primark.png\", \"images/brands/tommy_hilfiger.png\", \"images/brands/unif.png\", \"images/brands/faithfull.png\", \"images/brands/bershka.png\", \"images/brands/pacsun.png\", \"images/brands/goodhood.png\", \"images/brands/valfre.png\", \"images/brands/axel_arigato.png\", \"images/brands/580b57fcd9996e24bc43c4f2.png\", \"images/brands/o_mighty.jpg\", \"images/brands/comme-des-garcons.png\", \"images/brands/lacoste.png\", \"images/brands/urban_outfitters.png\", \"images/brands/monki.png\", \"images/brands/minga.png\", \"images/brands/margiela.png\", \"images/brands/reformation.png\", \"images/brands/zara.png\", \"images/brands/boohoo.png\", \"images/brands/The Ragged Priest.png\", \"images/brands/realisation_par.png\", \"images/brands/for_love_of_lemons.png\", \"images/brands/gymshark.png\", \"images/brands/ralph_lauren.png\", \"images/brands/lululemon.jpg\", \"images/brands/h&m.png\", \"images/brands/pull_and_bear.png\", \"images/brands/american_eagle.png\", \"images/brands/topshop.png\", \"images/brands/never_fully_dressed.png\", \"images/brands/asos.png\", \"images/brands/gucci.png\", \"images/brands/steve_madden.svg\", \"images/brands/calvin_klein.jpg\"]\n        // this.icons = this.shuffle(this.icons)\n        this.state = {\n            allBrands: this.icons,\n            ready: true,\n            btns: [],\n            // brands: []\n        }\n    }\n\n    // componentDidUpdate = () => {\n    //     console.log(this.props.styles)\n    //     console.log(this.state.styles)\n    //     if (this.props.styles && this.state.styles != this.props.styles) {      // if style props passed and state is not equal\n    //         this.setState({styles: this.props.styles})                          // equate the styles\n    //     }\n    // }\n\n    handleOptionChange = (e) => {\n        // console.log(e.target)\n        // console.log(e.target.id)\n        // console.log(this.props.brands.includes(e.target.id))\n        console.log(this.state.brands)\n        var brands = this.props.brands\n        console.log('BRAND:', e)\n        if (brands.includes(e.target.id)) {\n            console.log('removing brand')\n            brands = brands.filter( (item) => {return item != e.target.id} )\n        }\n        else {\n            console.log('adding brand')\n            brands.push(e.target.id)\n        }\n        this.props.onChange(brands)\n    }\n\n    handleRequestChange = (e) => {\n        this.setState({request: e.target.value},\n            () => {console.log(this.state)}    \n        )\n    }\n\n    submitRequest = () => {\n        var request = this.state.request.toLowerCase()\n        if (request != '') {\n          \n            this.setState({\n                request: ''\n                // request_loading: true\n            })\n            this.handleOptionChange({target: {id: request}})\n            makePostRequest('feature-request', {type: 'new brand request', request: request},\n                () => {\n                    console.log('brand requested')\n                }\n            )\n        }\n    }\n\n    render() {\n        console.log('PROPS:', this.props)\n        console.log('BRANDS:', this.props.brands)\n        var brands = this.props.brands\n        var allBrands = this.state.allBrands\n        return (\n            <div className=\"panel\">\n                <div className=\"medium\">\n                    Brands you love\n                </div>\n                <div className=\"\" style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center', height: '60vh', overflowY: 'scroll'}}>\n                    {\n                        allBrands\n                        .sort(\n                            (b1, b2) => {\n                                b1 = b1.split('.')[0].split('/').pop()\n                                b2 = b2.split('.')[0].split('/').pop()\n                                if (b1 > b2) {return 1}\n                                if (b2 > b1) {return -1}\n                            }\n                        )\n                        .map(\n                            (item) => {\n                                // console.log(item)\n                                var brand = item.split('.')[0].split('/').pop()\n                                var img = item.split('/').slice(-1)\n                                console.log(this.props.brands.includes(brand))\n                                var opacity = brands.includes(brand) ? '1' : '0.5'\n                                \n                                return <>\n                                    <label for={brand} onClick={this.handleOptionChange} style={{opacity}} value={brands.includes(item)}>\n                                        <button id={brand} className=\"brand_label img_btn\" >\n                                            <input className=\"radio_btn\" type=\"radio\" checked={brands.includes(brand)} />\n                                            <img id={brand} src={images[img]} alt=\"\"/>\n                                        </button>\n                                    </label>\n                                </>\n                            }\n                        )\n                    }\n                </div>\n                <div style={{marginTop: '30px'}}>\n                    <div><strong>Enter your own brand!</strong></div>\n                    <div className=\"searchbar\">\n                        <input value={this.state.request} onChange={this.handleRequestChange} className=\"text-response\" placeholder='Enter a missing brand...' style={{fontSize: '13px'}} />\n                        <button onClick={this.submitRequest}>\n                            {\n                                this.state.request_loading ?\n                                <Loading />\n                                :\n                                <img src={sendIcon} brand={{height: '30px'}} />\n                            }\n                        </button>\n                    </div>\n                </div>\n                {/* <button className=\"btn\" onClick={this.handleSubmit}>\n                    Done\n                </button> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        brands: state.user.brands ? state.user.brands : []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChange: (update) => {\n            console.log(update)\n            console.log(window.endpoint_prefix)\n            makePostRequest(`${window.endpoint_prefix}/details`, {brands: update},\n                () => {console.log('brands updated')}\n            )\n            dispatch({\n                type:\"SET_USER\",\n                update: {brands: update}\n            })\n        }\n    }\n}\n\n    // shuffle = (arr) => {\n    //     var j, x, i;\n    //     for (i = arr.length - 1; i > 0; i--) {\n    //         j = Math.floor(Math.random() * (i + 1));\n    //         x = arr[i];\n    //         arr[i] = arr[j];\n    //         arr[j] = x;\n    //     }\n    //     return arr;\n    // }\n//     componentDidUpdate = () => {\n//         console.log(this.props.brands)\n//         console.log(this.state.brands)\n//         if (this.props.brands && this.state.brands != this.props.brands) {      // if brand props passed and state is not equal\n//             this.setState({brands: this.props.brands})                          // equate the brands\n//         }\n//     }\n\n//     componentDidMount = () => {\n//         window.analytics.page('brands')\n//     }\n\n//     componentDidUpdate(prevProps){\n//         console.log('checking did update')\n//         console.log(prevProps.brands)\n//         console.log(this.props.brands)\n//         if(prevProps.brands !== this.props.brands){ \n//             makePostRequest('user-info', {brands: this.props.brands},\n//                 () => {\n//                     console.log('yo')\n//                 }\n//             )\n//         }\n//     }\n\n//     toggleLike = (brand) => {\n//         console.log('toggling')\n//         if (this.props.brands.includes(brand)) {\n//             this.props.unlikeBrand(brand)\n//             window.analytics.track('brand unliked', {brand: brand})\n//         }\n//         else {\n//             this.props.likeBrand(brand)\n//             window.analytics.track('brand liked', {brand: brand})\n//         }\n//     }\n\n//     getBtns = (icons) => {\n//         console.log('getting btns')\n//         var btns = icons.map(\n//             icon => {\n//                 var brand = icon.split('.')[0].split('/').pop()\n//                 var img = icon.split('/').slice(-1)\n//                 //var liked = this.state.liked.includes(brand)\n//                 var liked = this.props.brands.includes(brand)\n//                 console.log('BRAND', brand, 'LIKED:', liked)\n//                 return (<BrandBtn img={images[img]} brand={brand} liked={liked} toggleLike={this.toggleLike}/>)\n//             }\n//         )\n//         return btns\n//     }\n\n//     render() {\n//         console.log('brands from redux:', this.props.brands)\n//         return (\n//             <>\n//             <Navbar back={true} />\n//             <div className=\"body brands-body\" brand={{backgroundColor: '#BCA2F2'}}>\n//                 <div className=\"panel-title\">Brands you love</div>\n//                 <div className=\"small\">Select any brands that you love</div>\n//                 <div className=\"small\">Here's some of the most popular to start with</div>\n//                 <div className=\"grid-response\" id=\"brands\">\n//                     {this.getBtns(this.icons)}\n//                 </div>\n//                 {/*<input className=\"text-response not-required extra-detail\" id=\"custom_brands_i_love\" placeholder=\"Any others?\" />*/}\n//                 {/*\n//                 <div className=\"brands-searchbar-container\">\n//                     <div className=\"brands-searchbar-panel\">\n//                         <input className=\"brands-searchbar\" />\n//                         <div className=\"brands-search-icon\">s</div>\n//                     </div>\n//                 </div>\n//                 */}\n//             </div>\n//             </>\n//         )\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         likeBrand: (brand) => {\n//             console.log('liking')\n//             dispatch({\n//                 type: \"LIKE_BRAND\",\n//                 brand: brand\n//             })\n//         },\n//         unlikeBrand: (brand) => {\n//             console.log('unliking brand')\n//             dispatch({\n//                 type: \"UNLIKE_BRAND\",\n//                 brand: brand\n//             })\n//         }\n//     }\n// }\n\n// const mapStateToprops = (state) => {\n//     console.log(state.user)\n//     return {\n//         brands: state.user.brands ? state.user.brands : [],\n//     }\n// }\n\nexport default Brands = connect(mapStateToProps, mapDispatchToProps)(Brands) "]},"metadata":{},"sourceType":"module"}