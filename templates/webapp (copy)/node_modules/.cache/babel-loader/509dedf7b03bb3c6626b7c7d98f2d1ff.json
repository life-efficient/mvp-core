{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Modal.css\";\nimport cross from \"../images/icons/cross-filled.png\";\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = e => {\n      e.stopPropagation();\n\n      if (this.node.contains(e.target)) {\n        return;\n      } else {\n        this.props.closeModal();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal-container\",\n      style: this.props.modalOpen ? {\n        opacity: 1,\n        zIndex: 10\n      } : {\n        opacity: 0,\n        zIndex: -1\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal\",\n      ref: node => this.node = node,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"modal-closebtn\",\n      onClick: this.props.closeModal,\n      src: cross,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), this.props.content));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(state.modal)\n  return {\n    modalOpen: state.modal.open,\n    content: state.modal.content\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => {\n      dispatch({\n        type: \"CLOSE_MODAL\"\n      });\n    }\n  };\n};\n\nexport default Modal = connect(mapStateToProps, mapDispatchToProps)(Modal);","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/components/Modal.js"],"names":["React","Component","connect","cross","Modal","handleClick","e","stopPropagation","node","contains","target","props","closeModal","render","modalOpen","opacity","zIndex","content","mapStateToProps","state","modal","open","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,kCAAlB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE1BI,WAF0B,GAEXC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,eAAF;;AACA,UAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBH,CAAC,CAACI,MAArB,CAAJ,EAAkC;AAC9B;AACH,OAFD,MAGK;AAAC,aAAKC,KAAL,CAAWC,UAAX;AAAwB;AACjC,KARyB;AAAA;;AAU1BC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,SAAX,GAAuB;AAACC,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAAvB,GAAkD;AAACD,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,MAAM,EAAE,CAAC;AAAtB,OAA1F;AAAoH,MAAA,OAAO,EAAE,KAAKX,WAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEG,IAAI,IAAI,KAAKA,IAAL,GAAUA,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWC,UAApD;AAAgE,MAAA,GAAG,EAAET,KAArE;AAA4E,MAAA,GAAG,EAAC,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKK,KAAKQ,KAAL,CAAWM,OALhB,CADJ,CADJ;AAWH;;AAtByB;;AAyB9B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA,SAAO;AACHL,IAAAA,SAAS,EAAEK,KAAK,CAACC,KAAN,CAAYC,IADpB;AAEHJ,IAAAA,OAAO,EAAEE,KAAK,CAACC,KAAN,CAAYH;AAFlB,GAAP;AAIH,CAND;;AAQA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHX,IAAAA,UAAU,EAAE,MAAM;AACdW,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAepB,KAAK,GAAGF,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,KAA7C,CAAvB","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport \"./Modal.css\"\nimport cross from \"../images/icons/cross-filled.png\"\n\nclass Modal extends Component {\n\n    handleClick = (e) => {\n        e.stopPropagation()\n        if (this.node.contains(e.target)) {\n            return\n        }\n        else {this.props.closeModal()}\n    }\n\n    render() {\n        return (\n            <div className=\"modal-container\" style={this.props.modalOpen ? {opacity: 1, zIndex: 10} : {opacity: 0, zIndex: -1}} onClick={this.handleClick}>\n                <div className=\"modal\" ref={node => this.node=node}>\n                    <img className=\"modal-closebtn\" onClick={this.props.closeModal} src={cross} alt=\"\" />\n                    {/* <div className=\"modal-closebtn large\" onClick={props.closeModal}>\n                        &times;\n                        </div> */}\n                    {this.props.content}                \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state.modal)\n    return {\n        modalOpen: state.modal.open,\n        content: state.modal.content\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeModal: () => {\n            dispatch({type: \"CLOSE_MODAL\"})\n        }\n    }\n}\n\nexport default Modal = connect(mapStateToProps, mapDispatchToProps)(Modal)"]},"metadata":{},"sourceType":"module"}