{"ast":null,"code":"var _jsxFileName = \"/home/ice/test/test/src/stylistComponents/Profile.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Style from \"../components/Style\";\nimport \"./Profile.css\";\nimport uuid from \"uuid\";\nimport { connect } from \"react-redux\";\nimport default_dp from \"../images/misc/default-profile.png\";\nimport { makePostRequest } from \"../api_calls\";\nimport { Storage } from \"aws-amplify\";\nimport StylistStats from \"./StylistStats\";\nimport FeatureRequest from \"./FeatureRequest\";\nimport Bio from \"./Bio\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.uploadDP = e => {\n      console.log('uploading');\n      return new Promise((resolve, reject) => {\n        var type;\n        var url;\n        var fp;\n        var file = e.target.files[0];\n        type = file.type.split('/')[1];\n        fp = \"recommended_items/\".concat(uuid.v4(), \".\").concat(type);\n        var mimeType;\n\n        if (type == 'png') {\n          mimeType = 'image/png';\n        } else if (type == 'jpg' || type == 'jpeg') {\n          mimeType = 'image/jpeg';\n        } else {\n          alert('image type invalid (use .PNG, .JPG or .JPEG images)\\nYou used type ' + type);\n          return null;\n        }\n\n        console.log('puttin');\n        Storage.put(fp, file, {\n          contentType: mimeType\n        }).then(() => {\n          url = \"https://s3-eu-west-1.amazonaws.com/adla-data/public/\".concat(fp);\n          this.props.setStylistInfo({\n            display_pic: url\n          });\n        }).catch(err => {\n          alert('ERROR:', err);\n        }); //.catch(reject(Error('The following file failed to upload:', files[i])))\n      });\n    };\n  }\n\n  render() {\n    // console.log('USER:', this.props.user)\n    console.log('profile styles:', this.props.user);\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      style: {\n        backgroundColor: '#89C497'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"My profile\"), React.createElement(\"div\", {\n      className: \"dp-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"dp-input\",\n      className: \"dp-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.uploadDP,\n      id: \"dp-input\",\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.props.dp_url ? this.props.dp_url : default_dp,\n      className: \"display-pic\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(Bio, {\n      bio: this.props.user.bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(StylistStats, {\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Style, {\n      styles: this.props.user //  endpoint='stylist-my-info'\n      ,\n      onChange: styles => {\n        this.props.setStylistInfo({\n          styles\n        });\n        makePostRequest('stylist-my-info', {\n          styles\n        }, () => {\n          console.log('dets updated');\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(FeatureRequest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(state.user)\n  return {\n    dp_url: state.user.display_pic,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStylistInfo: update => {\n      makePostRequest('stylist-my-info', update, () => {\n        console.log('user updated');\n      });\n      dispatch({\n        type: \"SET_USER\",\n        update: update\n      });\n    }\n  };\n};\n\nexport default Profile = connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/home/ice/test/test/src/stylistComponents/Profile.js"],"names":["React","Component","Navbar","Style","uuid","connect","default_dp","makePostRequest","Storage","StylistStats","FeatureRequest","Bio","Profile","uploadDP","e","console","log","Promise","resolve","reject","type","url","fp","file","target","files","split","v4","mimeType","alert","put","contentType","then","props","setStylistInfo","display_pic","catch","err","render","user","backgroundColor","display","dp_url","bio","styles","mapStateToProps","state","mapDispatchToProps","dispatch","update"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport Navbar from \"./Navbar\"\nimport Style from \"../components/Style\"\nimport \"./Profile.css\"\nimport uuid from \"uuid\"\nimport { connect } from \"react-redux\"\nimport default_dp from \"../images/misc/default-profile.png\"\nimport { makePostRequest } from \"../api_calls\"\nimport { Storage } from \"aws-amplify\"\nimport StylistStats from \"./StylistStats\"\nimport FeatureRequest from \"./FeatureRequest\"\nimport Bio from \"./Bio\"\n\nclass Profile extends Component {\n\n    uploadDP = (e) => {\n        console.log('uploading')\n        return new Promise(\n            (resolve, reject) => {\n                var type\n                var url\n                var fp\n        var file = e.target.files[0]\n                type = file.type.split('/')[1]\n                fp = `recommended_items/${uuid.v4()}.${type}`\n                var mimeType \n                if (type == 'png') {\n                    mimeType = 'image/png'\n                }\n                else if (type == 'jpg' || type == 'jpeg') {\n                    mimeType = 'image/jpeg'\n                }\n                else {\n                    alert('image type invalid (use .PNG, .JPG or .JPEG images)\\nYou used type ' + type)\n                    return null\n                }\n                console.log('puttin')\n                Storage.put(fp, file, {contentType: mimeType})\n                .then(\n                    () => {\n                        url =`https://s3-eu-west-1.amazonaws.com/adla-data/public/${fp}`\n                        this.props.setStylistInfo({display_pic: url})\n                    }\n                )\n                .catch((err) => {alert('ERROR:', err)})\n                //.catch(reject(Error('The following file failed to upload:', files[i])))\n                }\n        )\n    }\n\n    render() {\n        // console.log('USER:', this.props.user)\n        console.log('profile styles:', this.props.user)\n        return (\n            <>\n            <Navbar back={true} />\n            <div className=\"body\" style={{backgroundColor: '#89C497'}}>\n                <div className=\"large\">\n                    My profile\n                </div>\n                <div className=\"dp-container\">\n                    <label for=\"dp-input\" className=\"dp-input\">\n                        <input onChange={this.uploadDP} id=\"dp-input\" type=\"file\" style={{display: 'none'}} />\n                        <img src={this.props.dp_url ? this.props.dp_url : default_dp} className=\"display-pic\" alt=\"\"/>\n                    </label>\n                </div>\n                <Bio bio={this.props.user.bio}/>\n                <StylistStats user={this.props.user}/>\n                <Style styles={this.props.user}\n                //  endpoint='stylist-my-info'\n                onChange={(styles) => {\n                    this.props.setStylistInfo({styles});\n                    makePostRequest('stylist-my-info', {styles}, \n                        () => {console.log('dets updated')}\n                    )\n                }}\n                 />\n                <FeatureRequest />\n            </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state.user)\n    return {\n        dp_url: state.user.display_pic,\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setStylistInfo: (update) => {\n            makePostRequest('stylist-my-info', update,\n                () => {\n                    console.log('user updated')\n                }\n            )\n            dispatch({\n                type: \"SET_USER\",\n                update: update\n            })\n        }\n    }\n}\n\nexport default Profile = connect(mapStateToProps, mapDispatchToProps)(Profile)"]},"metadata":{},"sourceType":"module"}