{"ast":null,"code":"var _jsxFileName = \"/home/ice/test/test/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport plus from \"../images/icons/plus.svg\";\nimport Button from './Button';\n\nconst make_dataset = (dataset, labels, color, label) => {\n  return {\n    label: label,\n    data: dataset,\n    fill: false,\n    lineTension: 0.6,\n    backgroundColor: color,\n    borderColor: color,\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: color,\n    pointBackgroundColor: color,\n    pointBorderWidth: 5,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: color,\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10\n  };\n};\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      var from = 1483228800.0.toString();\n      var to = new Date().getTime().toString();\n      console.log(to);\n      console.log(from);\n      console.log(typeof to);\n      fetch(\"https://dihwh38uwi.execute-api.eu-west-2.amazonaws.com/prod/data?_from=\".concat(from, \"&to=\").concat(to, \"&dataset=\").concat(this.props.data)).then(data => {\n        // console.log(data)\n        data = data.json(); // console.log(data)\n\n        return data;\n      }).then(data => {\n        console.log(data);\n        data = JSON.parse(data);\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.data = {\n      // labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [],\n      gridLines: [{\n        display: false\n      }]\n    };\n  }\n\n  render() {\n    if (this.state.data) {\n      this.data.labels = this.props.labels ? this.props.labels : [...Array(this.props.data.stints.length).keys()];\n      var labels = [...Array(this.props.data.stints.length).keys()]; // data.datasets[0].data = this.props.data.stints\n      // data.datasets[0].label = 'Stints'\n      // data.datasets[1].data = this.props.data.avails\n      // data.datasets[1].label = 'Availabilities'\n\n      var datasets = [this.props.data.stints, this.props.data.avails];\n      var data_labels = ['Stints', '\"Availabilities\"'];\n      var colors = ['#48C0C0', '#ff9b21'];\n\n      for (var i in colors) {\n        console.log(i);\n        this.data.datasets.push(make_dataset(datasets[i], labels, colors[i], data_labels[i]));\n      }\n\n      console.log(this.data.datasets);\n      return React.createElement(\"div\", {\n        className: \"\",\n        style: {\n          width: '390px',\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          margin: '20px',\n          borderRadius: '1px',\n          padding: '10px',\n          backgroundColor: 'whitesmoke',\n          animationDelay: \"\".concat(0.1 * this.props.idx, \"s\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          float: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.title)), React.createElement(Line, {\n        data: // labels: 'yooo',\n        this.data // options={{backgroundColor: 'rgba(0, 0, 0, 0.5)'}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\n;\nexport default LineChart;","map":{"version":3,"sources":["/home/ice/test/test/src/components/Chart.js"],"names":["React","Component","Line","Button","make_dataset","dataset","labels","color","label","data","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineChart","constructor","props","componentDidMount","from","toString","to","Date","getTime","console","log","fetch","then","json","JSON","parse","setState","datasets","gridLines","display","render","state","Array","stints","length","keys","avails","data_labels","colors","i","push","width","margin","borderRadius","padding","animationDelay","idx","float","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport plus from \"../images/icons/plus.svg\"\nimport Button from './Button';\n\nconst make_dataset = (dataset, labels, color, label) => {\n  return {\n      label: label,\n      data: dataset,\n      fill: false,\n      lineTension: 0.6,\n      backgroundColor: color,\n      borderColor: color,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: color,\n      pointBackgroundColor: color,\n      pointBorderWidth: 5,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: color,\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10\n  }\n}\n\n\nclass LineChart extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.data = {\n  // labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [],\n      gridLines: [{\n          display: false\n      }]\n    }\n}\n  componentDidMount = () => {\n      var from = 1483228800.0.toString()\n      var to = new Date().getTime().toString()\n      console.log(to)\n      console.log(from)\n      console.log(typeof(to))\n      fetch(`https://dihwh38uwi.execute-api.eu-west-2.amazonaws.com/prod/data?_from=${from}&to=${to}&dataset=${this.props.data}`)\n      .then(\n          data => {\n              // console.log(data)\n              data = data.json()\n              // console.log(data)\n              return data\n          }\n      )\n      .then(\n          data => {\n              console.log(data)\n              data = JSON.parse(data)\n              this.setState({data})\n          }\n      )\n  }\n\n  render() {\n    if (this.state.data) {\n        this.data.labels = this.props.labels ? this.props.labels : [...Array(this.props.data.stints.length).keys()]\n        var labels = [...Array(this.props.data.stints.length).keys()]\n        // data.datasets[0].data = this.props.data.stints\n        // data.datasets[0].label = 'Stints'\n        // data.datasets[1].data = this.props.data.avails\n        // data.datasets[1].label = 'Availabilities'\n        var datasets = [this.props.data.stints, this.props.data.avails]\n        var data_labels = ['Stints', '\"Availabilities\"']\n        var colors = ['#48C0C0', '#ff9b21']\n        for (var i in colors) {\n          console.log(i)\n          this.data.datasets.push(make_dataset(datasets[i], labels, colors[i], data_labels[i]))\n        }\n        console.log(this.data.datasets)\n        return (\n          <div className=\"\" \n            style={{\n              width: '390px',       backgroundColor: 'rgba(75,192,192,0.4)',\n              margin:'20px', \n              borderRadius: '1px', \n              padding: '10px', \n              backgroundColor: 'whitesmoke',\n              animationDelay: `${0.1*this.props.idx}s`\n            }} >\n            <div>\n              <div style={{float: 'left'}}>\n                {this.props.title}\n              </div>\n              {/* <Button>\n                <img style={{float: 'right', height: '15px'}} src={plus}/>\n              </Button> */}\n            </div>\n            {/* <div style={{backgroundColor: 'white'}}> */}\n\n            <Line data={\n                // labels: 'yooo',\n                this.data\n            } \n                // options={{backgroundColor: 'rgba(0, 0, 0, 0.5)'}}\n            />\n            {/* // height={40} width={2} options={{ maintainAspectRatio: false }} */}\n            {/* </div> */}\n          </div>\n        );\n      }\n      \n    }\n};\n\nexport default LineChart"]},"metadata":{},"sourceType":"module"}