{"ast":null,"code":"var _jsxFileName = \"/home/ice/test/test/src/general/ChangePassword.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport logo from \"../images/Adla.png\";\nimport eye from \"../images/see-icon.png\";\nimport { Auth } from \"aws-amplify\";\nimport { connect } from \"react-redux\";\nimport Loading from \"./Loading\";\n\nclass ChangePassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.showPassword = () => {\n      var type = this.state.passwordFieldType;\n      var newType = type === \"password\" ? \"input\" : \"password\";\n      this.setState({\n        passwordFieldType: newType\n      });\n      console.log(this.state);\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        console.log('redirecting to:', this.state.redirect);\n        return React.createElement(Redirect, {\n          to: this.state.redirect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.getError = () => {\n      if (!(this.state.newPassword === this.state.confirmNewPassword)) {\n        return \"Passwords must match\";\n      } else if (this.state.newPassword.length < 8) {\n        return \"Password should be longer\";\n      } else return null;\n    };\n\n    this.handleSubmit = () => {\n      console.log('user:', this.props.user);\n\n      if (this.getError() == null) {\n        console.log(this.props.user);\n        this.setState({\n          loading: true\n        });\n        Auth.completeNewPassword(this.props.user, this.state.newPassword).then(() => {\n          this.props.dispatchLogin();\n          this.setState({\n            redirect: this.props.from ? this.props.from : '/app/home'\n          }, () => {\n            console.log('redirected');\n          });\n        });\n      }\n    };\n\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      passwordFieldType: \"password\",\n      redirect: false,\n      loading: false\n    };\n    console.log('user passed in as prop:', this.props);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.renderRedirect(), React.createElement(\"div\", {\n      className: \"slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"main-logo\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"field-container long-field-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field-title \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"New password\")), React.createElement(\"input\", {\n      type: this.state.passwordFieldType,\n      id: \"newPassword\",\n      className: \"text-response\",\n      placeholder: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field-container long-field-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Confirm new password\")), React.createElement(\"input\", {\n      type: this.state.passwordFieldType,\n      id: \"confirmNewPassword\",\n      className: \"text-response\",\n      placeholder: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: eye,\n      id: \"passwordShow\",\n      className: \"btn passwordShow\",\n      onClick: this.showPassword,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"small form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.getError()), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : \"Submit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogin: () => {\n      dispatch({\n        type: \"LOG_IN\"\n      });\n    }\n  };\n};\n\nexport default ChangePassword = connect(null, mapDispatchToProps)(ChangePassword);\n{\n  /* <div className=\"index-body body\">\n     {this.renderRedirect()}\n     <div className=\"panel\">\n         <img src={ logo } className=\"main-logo\" alt=\"\" />\n         <div className=\"login-field\">\n             <div className=\"field-title small\">\n                 <strong>New password</strong>\n             </div>\n             <div className=\"login-field\">\n                 <input type={this.state.passwordFieldType} id=\"newPassword\" className=\"text-response\" placeholder=\"\" onChange={ this.handleChange }/>\n             </div>\n         </div>\n         <div className=\"login-field\">\n         <div className=\"field-title small\">\n             <strong>Confirm new password</strong>\n         </div>\n         <div className='password-input'>\n             <div className=\"login-field small\">\n             <input type={ this.state.passwordFieldType } id=\"confirmNewPassword\" className=\"text-response\" placeholder=\"\"  onChange={ this.handleChange }/>\n             </div>\n                 <img src={ eye } id=\"passwordShow\" className=\"btn passwordShow\" onClick={ this.showPassword } alt=\"\" />\n         </div>\n         </div>\n         </div>\n         <input type=\"submit\" className=\"main_button btn\" id=\"submit\" onClick={ this.handleSubmit } value=\"Login\" />\n     </div>\n  </div>     */\n}","map":{"version":3,"sources":["/home/ice/test/test/src/general/ChangePassword.js"],"names":["React","Component","Redirect","logo","eye","Auth","connect","Loading","ChangePassword","constructor","props","handleChange","event","setState","target","id","value","console","log","state","showPassword","type","passwordFieldType","newType","renderRedirect","redirect","getError","newPassword","confirmNewPassword","length","handleSubmit","user","loading","completeNewPassword","then","dispatchLogin","from","oldPassword","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport logo from \"../images/Adla.png\"\nimport eye from \"../images/see-icon.png\"\nimport { Auth } from \"aws-amplify\";\nimport { connect } from \"react-redux\"\nimport Loading from \"./Loading\"\n\n\nclass ChangePassword extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            oldPassword: '',\n            newPassword: '',\n            confirmNewPassword: '',\n            passwordFieldType: \"password\",\n            redirect: false,\n            loading: false\n        }\n        console.log('user passed in as prop:', this.props)\n    }\n\n    handleChange = (event) => {\n        this.setState({\n        [event.target.id]: event.target.value\n        },\n        () => {\n            console.log(this.state)\n        }\n        );\n    }\n\n    showPassword = () => {\n        var type = this.state.passwordFieldType\n        var newType = type === \"password\" ? \"input\" : \"password\"\n        this.setState({passwordFieldType: newType})\n        console.log(this.state)\n    }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n        console.log('redirecting to:', this.state.redirect)\n        return <Redirect to={this.state.redirect} />\n        }\n    }\n\n    getError = () => {\n        if ( ! (this.state.newPassword === this.state.confirmNewPassword) ) {\n            return \"Passwords must match\"\n        }\n        else if (this.state.newPassword.length < 8) {\n            return \"Password should be longer\"\n        }\n        else return null\n    }\n\n    handleSubmit = () => {\n        console.log('user:', this.props.user)\n        if (this.getError() == null) {console.log(this.props.user)\n            this.setState({loading: true})\n            Auth.completeNewPassword(\n                this.props.user,\n                this.state.newPassword\n            )\n            .then(\n                () => {\n                    this.props.dispatchLogin()\n                    this.setState({redirect: this.props.from ? this.props.from : '/app/home'},\n                        () => {\n                            console.log('redirected')\n                        }\n                    )\n                }\n            )\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.renderRedirect()}\n                <div className=\"slide\">\n                    <div className=\"form-container\">\n                        <img src={ logo } className=\"main-logo\" alt=\"\" />\n                        <div className=\"field-container long-field-title\">\n                            <div className=\"field-title \">\n                                <strong>New password</strong>\n                            </div>\n                            <input type={ this.state.passwordFieldType } id=\"newPassword\" className=\"text-response\" placeholder=\"\" onChange={ this.handleChange }/>\n                        </div>\n                        <div className=\"field-container long-field-title\">\n                            <div className=\"field-title\">\n                                <strong>Confirm new password</strong>\n                            </div>\n                            <input type={ this.state.passwordFieldType } id=\"confirmNewPassword\" className=\"text-response\" placeholder=\"\"  onChange={ this.handleChange }/>\n                        </div>\n                        <img src={ eye } id=\"passwordShow\" className=\"btn passwordShow\" onClick={ this.showPassword } alt=\"\" />\n                        <div className=\"small form-error\">\n                            {this.getError()}\n                        </div>\n                        <button onClick={this.handleSubmit}>\n                            {\n                                this.state.loading ?\n                                <Loading /> :\n                                \"Submit\"\n                            }\n                        </button>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        dispatchLogin: () => {\n            dispatch({\n                type: \"LOG_IN\"\n            })\n        }\n    }\n}\n\nexport default ChangePassword = connect(null, mapDispatchToProps)(ChangePassword)\n        {/* <div className=\"index-body body\">\n            {this.renderRedirect()}\n            <div className=\"panel\">\n                <img src={ logo } className=\"main-logo\" alt=\"\" />\n                <div className=\"login-field\">\n                    <div className=\"field-title small\">\n                        <strong>New password</strong>\n                    </div>\n                    <div className=\"login-field\">\n                        <input type={this.state.passwordFieldType} id=\"newPassword\" className=\"text-response\" placeholder=\"\" onChange={ this.handleChange }/>\n                    </div>\n                </div>\n                <div className=\"login-field\">\n                <div className=\"field-title small\">\n                    <strong>Confirm new password</strong>\n                </div>\n                <div className='password-input'>\n                    <div className=\"login-field small\">\n                    <input type={ this.state.passwordFieldType } id=\"confirmNewPassword\" className=\"text-response\" placeholder=\"\"  onChange={ this.handleChange }/>\n                    </div>\n                        <img src={ eye } id=\"passwordShow\" className=\"btn passwordShow\" onClick={ this.showPassword } alt=\"\" />\n                </div>\n                </div>\n                </div>\n                <input type=\"submit\" className=\"main_button btn\" id=\"submit\" onClick={ this.handleSubmit } value=\"Login\" />\n            </div>\n        </div>     */}"]},"metadata":{},"sourceType":"module"}