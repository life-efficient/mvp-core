{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/general/form_components/Dropdown.js\";\nimport React, { Component } from \"react\";\nimport \"./Dropdown.css\";\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      document.addEventListener('mousedown', this.handleClick, false);\n      var options = this.props.options.map(option => {\n        return React.createElement(\"option\", {\n          className: \"dropdown-option\",\n          value: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, option);\n      });\n      this.options = options;\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('mousedown', this.handleClick, false);\n    };\n\n    this.handleClick = e => {\n      if (this.node.contains(e.target)) {\n        this.toggleDropdown();\n      }\n    };\n\n    this.toggleDropdown = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      }, () => {\n        console.log('dropdown open?', this.state.dropdownOpen);\n      });\n    };\n\n    this.setValue = e => {\n      console.log('setting');\n      this.setState({\n        value: e.target.id\n      }, console.log(this.state));\n      this.toggleDropdown();\n    };\n\n    this.state = {\n      dropdownOpen: false,\n      dropdownOptions: null,\n      value: this.props.value\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      ref: node => this.node = node,\n      value: this.props.value ? this.props.value : null,\n      onChange: this.props.onChange,\n      className: \"text-response extra-detail\",\n      name: this.props.name,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.prompt), this.options));\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/general/form_components/Dropdown.js"],"names":["React","Component","Dropdown","constructor","props","componentDidMount","document","addEventListener","handleClick","options","map","option","componentWillUnmount","removeEventListener","e","node","contains","target","toggleDropdown","setState","dropdownOpen","state","console","log","setValue","value","id","dropdownOptions","render","onChange","name","prompt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,iBAVmB,GAUC,MAAM;AACtBC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,WAA5C,EAAyD,KAAzD;AACA,UAAIC,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CACTC,MAAD,IAAY;AACR,eACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,KAAK,EAAEA,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,MADL,CADJ;AAKH,OAPS,CAAd;AASA,WAAKF,OAAL,GAAeA,OAAf;AACH,KAtBkB;;AAAA,SAwBnBG,oBAxBmB,GAwBI,MAAM;AACzBN,MAAAA,QAAQ,CAACO,mBAAT,CAA6B,WAA7B,EAA0C,KAAKL,WAA/C,EAA4D,KAA5D;AACH,KA1BkB;;AAAA,SA4BnBA,WA5BmB,GA4BJM,CAAD,IAAO;AACjB,UAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAC9B,aAAKC,cAAL;AACH;AACJ,KAhCkB;;AAAA,SAkCnBA,cAlCmB,GAkCF,MAAM;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAA3B,OAAd,EACI,MAAM;AACFE,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKF,KAAL,CAAWD,YAAzC;AACH,OAHL;AAKH,KAxCkB;;AAAA,SA0CnBI,QA1CmB,GA0CPV,CAAD,IAAO;AACdQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAKJ,QAAL,CAAc;AAACM,QAAAA,KAAK,EAAEX,CAAC,CAACG,MAAF,CAASS;AAAjB,OAAd,EACIJ,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB,CADJ;AAGA,WAAKH,cAAL;AACH,KAhDkB;;AAEf,SAAKG,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE,KADL;AAETO,MAAAA,eAAe,EAAE,IAFR;AAGTF,MAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWqB;AAHT,KAAb;AAKH;;AA2CDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEb,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAAjC;AAAuC,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWqB,KAAX,GAAmB,KAAKrB,KAAL,CAAWqB,KAA9B,GAAsC,IAApF;AAA0F,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWyB,QAA/G;AAAyH,MAAA,SAAS,EAAC,4BAAnI;AAAgK,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAW0B,IAAjL;AAAuL,MAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWsB,EAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKtB,KAAL,CAAW2B,MAAtC,CADJ,EAEK,KAAKtB,OAFV,CADJ,CADJ;AAaH;;AAjE4B;;AAoEjC,eAAeP,QAAf","sourcesContent":["import React, { Component } from \"react\"\nimport \"./Dropdown.css\"\n\nclass Dropdown extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dropdownOpen: false,\n            dropdownOptions: null,\n            value: this.props.value\n        }\n    }\n\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClick, false)\n        var options = this.props.options.map( \n            (option) => {\n                return (\n                    <option className=\"dropdown-option\" value={option}>\n                        {option}\n                    </option>\n                )\n            }\n        )\n        this.options = options\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClick, false)\n    }\n\n    handleClick = (e) => {\n        if (this.node.contains(e.target)) {\n            this.toggleDropdown()\n        }\n    }\n\n    toggleDropdown = () => {\n        this.setState({dropdownOpen: !this.state.dropdownOpen},\n            () => {\n                console.log('dropdown open?', this.state.dropdownOpen)\n            }\n        )\n    }\n\n    setValue = (e) => {\n        console.log('setting')\n        this.setState({value: e.target.id},\n            console.log(this.state)\n        )\n        this.toggleDropdown()\n    }\n\n    render() {\n        return (\n            <div className=\"dropdown\">\n                <select ref={node => this.node = node} value={this.props.value ? this.props.value : null} onChange={this.props.onChange} className=\"text-response extra-detail\" name={this.props.name} id={this.props.id}>\n                    <option disabled selected>{this.props.prompt}</option>\n                    {this.options}\n                </select>\n                \n                {/*<div className=\"dropdown-options\" style={this.state.dropdownOpen ? {position: \"absolute\"} : {display: \"none\"}}>\n                    {this.options}\n                </div>\n                */}\n            </div>\n        )\n    }\n}\n\nexport default Dropdown"]},"metadata":{},"sourceType":"module"}