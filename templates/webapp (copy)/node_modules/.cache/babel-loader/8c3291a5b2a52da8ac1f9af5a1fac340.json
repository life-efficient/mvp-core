{"ast":null,"code":"import _defineProperty from \"/home/ice/supermedia/webapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ice/supermedia/webapp/src/adminComponents/User.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { makeGetRequest, makePostRequest } from \"../api_calls\";\nimport queryString from \"query-string\";\nimport SlideUpPanel from \"../components/SlideUpPanel\";\nimport { connect } from \"react-redux\";\nimport MakeRecommendations from \"./MakeRecommendations\";\nimport UserInfo from \"./UserInfo\";\nimport PotentialRecommendation from \"../stylistComponents/PotentialRecommendation\";\nimport { withRouter } from \"react-router-dom\";\nimport Messaging from \"../stylistComponents/Messaging\";\nimport AddRecItem from \"./MakeRecommendations\";\nimport DelegateToStylist from \"./DelegateToStylist\";\nimport Navbar from \"./Navbar\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRecommended = () => {\n      makeGetRequest(\"admin-recommendations?user_id=\".concat(this.state.user_id), data => {\n        data = data.map(item => {\n          return item.product_id;\n        });\n        console.log('ALREADY RECOMMENDED:', data);\n        this.setState({\n          already_recommended: data\n        });\n      });\n    };\n\n    this.getOptions = section => {\n      var options = this.state.all_options[section].map((item, idx) => {\n        return React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: section,\n          value: item,\n          checked: this.state[section].includes(item),\n          onChange: this.onRadioChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), item, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      });\n      return options;\n    };\n\n    this.getUserInfo = () => {\n      makeGetRequest(\"admin-user-info?user_id=\".concat(this.state.user_id), data => {\n        console.log('USER INFO:', data);\n        this.setState({\n          user: data\n        }, () => {\n          console.log('state:', this.state);\n        });\n\n        if (Object.keys(data).includes('styles')) {\n          // if any styles have actually been set yet\n          console.log('TAGS:', data.styles);\n          this.setState({\n            styles: data.styles\n          }, () => {\n            console.log(this.state.styles);\n          });\n        }\n\n        if (Object.keys(data).includes('brands')) {\n          // if any styles have actually been set yet\n          console.log('BRANDS:', data.brands);\n          this.setState({\n            brands: data.brands\n          }, () => {\n            console.log(this.state.brands);\n          });\n        }\n      });\n    };\n\n    this.getBrands = () => {\n      console.log('getting brands');\n      makeGetRequest('admin-brands', brands => {\n        brands = brands.body;\n        brands = JSON.parse(brands);\n        brands = brands.reduce((out, brand) => {\n          out = [...out, brand.brand];\n          return out;\n        }, []);\n        console.log(brands);\n        this.setState({\n          all_options: _objectSpread({}, this.state.all_options, {\n            brands\n          })\n        }, () => {\n          console.log('STATE:', this.state);\n        });\n      });\n    };\n\n    this.getProducts = () => {\n      console.log('getting products');\n      makeGetRequest(\"admin-recommendation-prompts?user_id=\".concat(this.state.user_id), data => {\n        console.log('PRODUCTS:', data);\n        this.setState({\n          products: data\n        });\n      });\n    };\n\n    this.onRadioChange = e => {\n      console.log('changing radio');\n      console.log(e.target.name); //e.persist()\n\n      const name = e.target.name;\n      const key = e.target.value;\n      const checked = e.target.checked;\n      var options = this.state[name];\n\n      if (options.includes(e.target.value)) {\n        // if checked then remove\n        options = options.filter(op => {\n          return op != e.target.value;\n        });\n      } else {\n        // if unchecked then append\n        options = [...options, e.target.value];\n      }\n\n      this.setState({\n        [name]: options\n      }, () => {\n        console.log(this.state[name]);\n        makePostRequest(\"admin-user-info?user_id=\".concat(this.state.user_id), {\n          styles: this.state.styles,\n          brands: this.state.brands\n        }, () => {\n          console.log('updated user info');\n          this.getProducts();\n        });\n      });\n    };\n\n    this.getRecs = () => {\n      makeGetRequest(\"admin-recs?user_id=\".concat(this.state.user_id), recs => {\n        console.log('RECS:', recs);\n        recs = recs.map(item => {\n          var url = item.product_url ? item.product_url : item.url;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: item.img_urls[0],\n            className: \"liked-img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }), item.idx, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            href: url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }), url);\n        });\n        this.setState({\n          recs\n        });\n      });\n    };\n\n    var params = queryString.parse(this.props.location.search);\n    this.state = {\n      user: null,\n      user_id: params.sub,\n      styles: [],\n      brands: [],\n      products: [],\n      all_options: {\n        brands: [],\n        styles: ['streetwear', 'preppy', 'high_end', 'italian', 'sartorial', 'boho', 'formal', 'sporty', 'technical']\n      },\n      already_recommended: []\n    };\n    this.getUserInfo();\n    this.getBrands();\n    this.getProducts();\n    this.getRecommended();\n    this.getRecs();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => {\n        this.props.openSlideUp(React.createElement(DelegateToStylist, {\n          assigned_to: this.state.user ? this.state.user.assigned_to : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Delegate to stylist\"), React.createElement(UserInfo, {\n      user: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Recommendations\"), this.state.recs ? this.state.recs : 'None yet'), React.createElement(Messaging, {\n      user_id: this.state.user_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(SlideUpPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openModal: content => {\n      console.log('content:', content);\n      dispatch({\n        type: \"OPEN_MODAL\",\n        content: content\n      });\n    },\n    openSlideUp: content => {\n      dispatch({\n        type: \"OPEN_SLIDEUP\",\n        content: content\n      });\n    },\n    closeModal: () => {\n      dispatch({\n        type: \"CLOSE_MODAL\"\n      });\n    },\n    closeSlideUp: () => {\n      dispatch({\n        type: \"CLOSE_SLIDEUP\"\n      });\n    }\n  };\n};\n\nexport default User = connect(null, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/adminComponents/User.js"],"names":["React","Component","makeGetRequest","makePostRequest","queryString","SlideUpPanel","connect","MakeRecommendations","UserInfo","PotentialRecommendation","withRouter","Messaging","AddRecItem","DelegateToStylist","Navbar","User","constructor","props","getRecommended","state","user_id","data","map","item","product_id","console","log","setState","already_recommended","getOptions","section","options","all_options","idx","includes","onRadioChange","getUserInfo","user","Object","keys","styles","brands","getBrands","body","JSON","parse","reduce","out","brand","getProducts","products","e","target","name","key","value","checked","filter","op","getRecs","recs","url","product_url","img_urls","params","location","search","sub","render","openSlideUp","assigned_to","mapDispatchToProps","dispatch","openModal","content","type","closeModal","closeSlideUp"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\"\nimport { makeGetRequest, makePostRequest } from \"../api_calls\"\nimport queryString from \"query-string\"\nimport SlideUpPanel from \"../components/SlideUpPanel\"\nimport { connect } from \"react-redux\"\nimport MakeRecommendations from \"./MakeRecommendations\"\nimport UserInfo from \"./UserInfo\"\nimport PotentialRecommendation from \"../stylistComponents/PotentialRecommendation\"\nimport { withRouter } from \"react-router-dom\"\nimport Messaging from \"../stylistComponents/Messaging\"\nimport AddRecItem from \"./MakeRecommendations\"\nimport DelegateToStylist from \"./DelegateToStylist\"\nimport Navbar from \"./Navbar\"\n\nclass User extends Component {\n    constructor(props){\n        super(props)\n        var params = queryString.parse(this.props.location.search)\n        this.state = {\n            user: null,\n            user_id: params.sub,\n            styles: [],\n            brands: [],\n            products: [],\n            all_options: {\n                brands: [],\n                styles: [\n                    'streetwear',\n                    'preppy',\n                    'high_end',\n                    'italian',\n                    'sartorial',\n                    'boho',\n                    'formal',\n                    'sporty',\n                    'technical'\n                ]\n            },\n            already_recommended: []\n        }\n        this.getUserInfo()\n        this.getBrands()\n        this.getProducts()\n        this.getRecommended()\n        this.getRecs()\n    }\n\n    getRecommended = () => {\n        makeGetRequest(`admin-recommendations?user_id=${this.state.user_id}`,\n            (data) => {\n                data = data.map(\n                    (item) => {\n                        return item.product_id\n                    }\n                )\n                console.log('ALREADY RECOMMENDED:', data)\n                this.setState({already_recommended: data})\n            }\n        )\n    }\n\n    getOptions = (section) => {\n        var options = this.state.all_options[section].map(\n            (item, idx) => {\n                return (\n                    <label>\n                        <input type=\"checkbox\" name={section} value={item} checked={this.state[section].includes(item)} onChange={this.onRadioChange}/>\n                        {item}\n                        <br/>\n                    </label>\n                )\n            }\n        )\n        return options\n    }\n\n    getUserInfo = () => {\n        makeGetRequest(`admin-user-info?user_id=${this.state.user_id}`,\n            (data) => {\n                console.log('USER INFO:', data)\n                this.setState({user: data},\n                    () => {\n                        console.log('state:', this.state)\n                    }    \n                )\n                \n                if (Object.keys(data).includes('styles')) {       // if any styles have actually been set yet\n                    console.log('TAGS:', data.styles)\n                    this.setState({styles: data.styles},\n                        () => {\n                            console.log(this.state.styles)\n                        }    \n                    )\n                }\n                if (Object.keys(data).includes('brands')) {       // if any styles have actually been set yet\n                    console.log('BRANDS:', data.brands)\n                    this.setState({brands: data.brands},\n                        () => {\n                            console.log(this.state.brands)\n                        }    \n                    )\n                }\n            }\n        )\n    }\n\n    getBrands = () =>{\n        console.log('getting brands')\n        makeGetRequest('admin-brands',\n            (brands) => {\n                brands = brands.body\n                brands = JSON.parse(brands)\n                brands = brands.reduce(\n                    (out, brand) => {\n                        out = [...out, brand.brand]\n                        return out\n                    },\n                    []\n                )\n                console.log(brands)\n                this.setState({\n                    all_options: {\n                        ...this.state.all_options,\n                        brands\n                    }\n                },\n                    () => {\n                        console.log('STATE:', this.state)\n                    }\n                )\n            }\n        )\n    }\n\n    getProducts = () => {\n        console.log('getting products')\n        makeGetRequest(`admin-recommendation-prompts?user_id=${this.state.user_id}`,\n            (data) => {\n                console.log('PRODUCTS:', data)\n                this.setState({\n                    products: data\n                })\n            }\n        )\n    }\n\n    onRadioChange = (e) => {\n        console.log('changing radio')\n        console.log(e.target.name)\n        //e.persist()\n        const name = e.target.name\n        const key = e.target.value\n        const checked = e.target.checked\n        var options = this.state[name]\n        if (options.includes(e.target.value)) {     // if checked then remove\n            options = options.filter(op => {return op != e.target.value})\n        }\n        else {                                      // if unchecked then append\n            options = [...options, e.target.value]\n        }\n        this.setState({\n            [name]: options\n        },\n            () => {\n                console.log(this.state[name])\n                makePostRequest(`admin-user-info?user_id=${this.state.user_id}`, {styles: this.state.styles, brands: this.state.brands},\n                    () => {\n                        console.log('updated user info')\n                        this.getProducts()\n                    }\n                )\n            }    \n        )\n    }\n\n    getRecs = () => {\n        makeGetRequest(`admin-recs?user_id=${this.state.user_id}`,\n            (recs) => {\n                console.log('RECS:', recs)\n                recs = recs.map(\n                    (item) => {\n                        var url = item.product_url ? item.product_url : item.url\n                        return (<div>\n                            <img src={item.img_urls[0]} className=\"liked-img\"/>\n                            {item.idx}\n                            <br/>\n                            <a href={url}/>{url}\n                        </div>\n                        )\n                    }\n                )\n                this.setState({recs})\n            }\n        )\n    }\n\n    render () {\n        return (\n            <>\n                <Navbar back={true} />\n                    <div className=\"large\">\n                        User\n                    </div>\n                    <button className=\"btn\" onClick={() => {this.props.openSlideUp(<DelegateToStylist assigned_to={this.state.user ? this.state.user.assigned_to : null}/>)}}>\n                        Delegate to stylist\n                    </button>\n                    <UserInfo user={this.state.user}/>\n                    <div className=\"panel\">\n                        <div className=\"medium\">\n                            Recommendations\n                        </div>\n                        {\n                            this.state.recs ?\n                            this.state.recs :\n                            'None yet'\n                        }\n                    </div>\n                    <Messaging user_id={this.state.user_id}/>\n                    {/* <button className=\"btn small\" onClick={() => this.props.openModal(<AddRecItem closeModal={this.props.closeModal} />)}>\n                        Recommend a new item!\n                    </button>\n                    <div className=\"panel\">\n                        <div className=\"medium\">\n                            Styles\n                        </div>\n                        {this.getOptions('styles')}       \n                    </div>\n                    <div className=\"panel\">\n                        <div className=\"medium\">\n                            Brands recommending from\n                        </div>\n                        {this.getOptions('brands')}       \n                    </div>\n                    <div>\n\n                    </div> */}\n                        {/* <div className=\"medium\">\n                            Potential recommendations\n                        </div>\n                        <div className=\"potential-recs\">\n                            {\n                                this.state.products.map(\n                                    (product, idx) => {\n                                        return <PotentialRecommendation rec={product} key={idx} already_recommended={this.state.already_recommended.includes(product.product_id)} user_id={this.state.user_id} />\n                                    }\n                                )\n                            }\n                        </div> */}\n                <SlideUpPanel />\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        openModal: (content) => {\n            console.log('content:', content)\n            dispatch({\n                type: \"OPEN_MODAL\",\n                content: content\n            })\n        },\n        openSlideUp: (content) => {\n            dispatch({\n                type: \"OPEN_SLIDEUP\",\n                content: content\n            })\n        },\n        closeModal: () => {\n            dispatch({\n                type: \"CLOSE_MODAL\"\n            })\n        },\n        closeSlideUp: () => {\n            dispatch({\n                type: \"CLOSE_SLIDEUP\"\n            })\n        }\n    }\n}\n\nexport default User = connect(null, mapDispatchToProps)(User)"]},"metadata":{},"sourceType":"module"}