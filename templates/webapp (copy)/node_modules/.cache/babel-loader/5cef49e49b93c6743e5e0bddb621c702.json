{"ast":null,"code":"import _defineProperty from \"/home/ice/supermedia/webapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ice/supermedia/webapp/src/components/Swiping.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"./Swiping.css\";\nimport { importAll } from \"../utils\";\nimport { makePostRequest, makeGetRequest } from \"../api_calls\";\nimport heart from \"../images/icons/heart.png\";\nimport cross from \"../images/icons/cross-filled.png\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../general/Loading\";\n\nrequire.context('../images/product-marquee');\n\nclass Swiping extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImgs = () => {\n      console.log('GETTING IMGS');\n\n      if (this.props.gender) {\n        console.log('GENDER:', this.props.gender);\n        var gender = this.props.gender.toLowerCase(); // var gender = 'male'\n\n        makeGetRequest(\"swipe-products?gender=\".concat(gender), data => {\n          data = data.filter(d => {\n            // console.log(d)\n            // console.log('swipes:', this.props.swipes)\n            if (this.props.swipes.includes(d)) {\n              console.log('item already in list');\n            }\n\n            return !this.props.swipes.includes(d);\n          });\n          console.log('# new items being appended:', data.length);\n          var items = [...this.state.items, ...data]; // var remaining = this.state.remaining + data.length\n          // var responses = [...this.state.responses]\n\n          this.setState({\n            items // remaining,\n            // responses\n            // swiped: [...data.map(() => {return null}), ...this.state.swiped],\n            // handlingIdx: this.state.handlingIdx + data.length\n\n          }, () => {// console.log(this.state)\n          });\n        });\n      } // GET IMAGES TO SWIPE ON FROM API\n\n    };\n\n    this.respond = response => {\n      // var s = this.state.swiped\n      // s[idx] = response\n      // console.log(this.state.items)\n      // this.setState({swiped: s})\n      // this.handle()\n      // makePostRequest('like-product',\n      // {\n      //         img_id: this.state.items[idx],\n      //         response: response\n      // },\n      //     () => {console.log('products liked')}\n      // )\n      console.log('RESPONDING');\n      var responses = this.state.responses;\n      responses.push(response);\n      console.log('responses:', responses);\n      var img_url = this.state.items[this.state.responses.length - 1]; // when no responses, get first item\n\n      console.log('linking img:', img_url);\n      this.setState({\n        responses //,\n        // remaining: this.state.remaining - 1\n\n      });\n      this.props.respond(img_url, response);\n    };\n\n    this.getCards = () => {\n      var cards = this.state.items.map((item, idx) => {\n        console.log('idx:', idx); // console.log('remaining:', this.state.remaining)\n\n        var zIndex = 1 + this.state.responses.length - idx;\n        console.log('zIndex:', zIndex);\n        return React.createElement(Card, {\n          src: item,\n          alt: \"\",\n          respond: this.respond,\n          swiped: this.state.responses[idx],\n          active: idx == this.state.responses.length,\n          zIndex: zIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        });\n      });\n      return cards;\n    };\n\n    console.log(props); // GET INITIAL ITEMS BEFORE API RETURNS REST\n\n    let _items = []; // if (window.location.href == 'https://adla.site') {\n    //     var f = require.context(`../images/swipe-images`, false)\n    //     f.keys().map(\n    //         (item, index) => { \n    //             items[index] = f(item)\n    //         }\n    //     )\n    //     items = items.slice(0, 5)\n    // }\n\n    this.state = {\n      items: [],\n      // remaining: 0,\n      responses: [] // swiped: items.map((item) => {return null}),\n      // handlingIdx: items.length - 1\n\n    };\n  }\n\n  render() {\n    var ready;\n\n    if (this.props.ready == null) {\n      // if certain conditions need to be met before fetching imgs (e.g. register gender on signup) then \n      ready = true;\n    } else {\n      ready = this.props.ready;\n    } // console.log('items length:', this.state.items.length)\n    // console.log('logged in:', this.props.logged_in)\n    // console.log('ready?', ready)\n    // console.log(this.state.handlingIdx)\n    // console.log(this.props.logged_in)\n    // console.log(ready)\n    // if (this.state.handlingIdx <= 2 && this.props.logged_in && ready) {\n\n\n    if (this.state.items.length - this.state.responses.length < 3 && ready) {\n      this.getImgs();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"swipe_cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.items ? this.getCards() : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"swipe_options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"swipe_dislike_btn\",\n      onClick: () => {\n        this.respond('no');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: cross,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"swipe_like_btn\",\n      onClick: () => {\n        this.respond('yes');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: heart,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.touchStart = e => {\n      var startX = e.changedTouches[0].pageX;\n      var startY = e.changedTouches[0].pageY;\n      this.setState({\n        startX,\n        startY\n      });\n    };\n\n    this.swipe = e => {\n      var curX = e.changedTouches[0].pageX;\n      var deltaX = curX - this.state.startX;\n      var curY = e.changedTouches[0].pageY;\n      var deltaY = curY - this.state.startY; //console.log(`${curX} - ${this.state.startX} = ${deltaX}`)\n\n      this.setState({\n        style: _objectSpread({}, this.state.style, {\n          transform: \"translateX(\".concat(deltaX, \"px) translateY(\").concat(deltaY, \"px) rotate(\").concat(0.1 * deltaX, \"deg)\")\n        })\n      });\n    };\n\n    this.let_go = e => {\n      var deltaX = e.changedTouches[0].pageX - this.state.startX;\n\n      if (Math.abs(deltaX) > this.decisionPoint) {\n        window.analytics.track('image swiped on sign up');\n\n        if (deltaX > 0) {\n          this.props.respond('yes'); // this.setState({swiped: 'yes'})\n        } else {\n          this.props.respond('no'); // this.setState({swiped: 'no'})\n        }\n      } else {\n        this.setState({\n          style: {\n            transform: 'translateX(0vw) rotate(0deg)'\n          }\n        });\n      } //     // this.setState({centering: 'centre'},\n      //         // this.setState({centering: false})\n      //     // )\n      //     // this.setState({style:\n      //     //     {'transform': 'translateX(0px) rotate(0deg)',}\n      //     // })\n      // }\n\n    };\n\n    this.decisionPoint = 100;\n    this.state = {\n      startX: 0,\n      swiped: null,\n      // centering: false,\n      loaded: false // style: {zIndex: this.props.zIndex}\n\n    };\n  }\n\n  render() {\n    console.log('swiped prop:', this.props.swiped);\n\n    let style = _objectSpread({}, this.state.style);\n\n    if (this.props.swiped) {\n      if (this.props.swiped == 'yes') {\n        style = _objectSpread({}, style, {\n          transform: 'translateX(100vw) rotate(90deg)'\n        });\n      } else if (this.props.swiped == 'no') {\n        style = _objectSpread({}, style, {\n          transform: 'translateX(-100vw) rotate(-90deg)'\n        });\n      }\n    }\n\n    console.log('style:', style);\n\n    if (this.props.active) {\n      var p = {\n        onTouchStart: this.touchStart,\n        onTouchEnd: this.let_go,\n        onTouchMove: this.swipe\n      };\n    }\n\n    style = _objectSpread({}, style, {\n      zIndex: this.props.zIndex\n    });\n    console.log(style);\n    return React.createElement(\"div\", Object.assign({\n      className: \"swipe_card\",\n      style: style\n    }, p, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.props.src,\n      alt: \"\",\n      onLoad: () => {\n        this.setState({\n          loaded: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), this.state.loaded ? null : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('STATE:', state);\n  return {\n    logged_in: state.user.logged_in,\n    gender: state.user.gender,\n    swipes: state.user.swipe_responses ? state.user.swipe_responses : []\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    respond: (img_url, response) => {\n      console.log('liking image:', img_url);\n      makePostRequest('like-product', {\n        img_id: img_url,\n        response: response\n      }, () => {\n        console.log('product liked');\n      });\n      dispatch({\n        type: 'SWIPE_IMG',\n        response,\n        img_url\n      });\n    }\n  };\n};\n\nexport default Swiping = connect(mapStateToProps, mapDispatchToProps)(Swiping);","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/components/Swiping.js"],"names":["React","Component","importAll","makePostRequest","makeGetRequest","heart","cross","connect","Loading","require","context","Swiping","constructor","props","getImgs","console","log","gender","toLowerCase","data","filter","d","swipes","includes","length","items","state","setState","respond","response","responses","push","img_url","getCards","cards","map","item","idx","zIndex","render","ready","Card","touchStart","e","startX","changedTouches","pageX","startY","pageY","swipe","curX","deltaX","curY","deltaY","style","transform","let_go","Math","abs","decisionPoint","window","analytics","track","swiped","loaded","active","p","onTouchStart","onTouchEnd","onTouchMove","src","mapStateToProps","logged_in","user","swipe_responses","mapDispatchToProps","dispatch","img_id","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport \"./Swiping.css\"\nimport { importAll } from \"../utils\"\nimport { makePostRequest, makeGetRequest } from \"../api_calls\"\nimport heart from \"../images/icons/heart.png\"\nimport cross from \"../images/icons/cross-filled.png\"\nimport { connect } from \"react-redux\";\nimport Loading from \"../general/Loading\"\n\nrequire.context('../images/product-marquee')\n\nclass Swiping extends Component {\n    constructor(props) {\n        super(props)\n        console.log(props)\n        // GET INITIAL ITEMS BEFORE API RETURNS REST\n        let items = []\n        // if (window.location.href == 'https://adla.site') {\n        //     var f = require.context(`../images/swipe-images`, false)\n        //     f.keys().map(\n        //         (item, index) => { \n        //             items[index] = f(item)\n        //         }\n        //     )\n        //     items = items.slice(0, 5)\n        // }\n       \n        this.state = {\n            items: [],\n            // remaining: 0,\n            responses: []\n            // swiped: items.map((item) => {return null}),\n            // handlingIdx: items.length - 1\n        }\n    }\n    \n    getImgs = () => {\n        console.log('GETTING IMGS')\n        if (this.props.gender) {\n            console.log('GENDER:', this.props.gender)\n            var gender = this.props.gender.toLowerCase()\n            // var gender = 'male'\n            makeGetRequest(`swipe-products?gender=${gender}`, \n                (data) => {\n                    data = data.filter(\n                        (d) =>{\n                            // console.log(d)\n                            // console.log('swipes:', this.props.swipes)\n                            if (this.props.swipes.includes(d)) {\n                                console.log('item already in list')\n                            }\n                            return !this.props.swipes.includes(d)\n                        }\n                    )\n                    console.log('# new items being appended:', data.length)\n                    var items = [...this.state.items, ...data]\n                    // var remaining = this.state.remaining + data.length\n                    // var responses = [...this.state.responses]\n                    this.setState({\n                        items,\n                        // remaining,\n                        // responses\n                        // swiped: [...data.map(() => {return null}), ...this.state.swiped],\n                        // handlingIdx: this.state.handlingIdx + data.length\n                    },\n                        () => {\n                            // console.log(this.state)\n                        }\n                    )\n                }\n            )\n        }\n        // GET IMAGES TO SWIPE ON FROM API\n    }\n\n    // handle = () => {\n    //     this.setState({\n    //         handlingIdx: this.state.handlingIdx -= 1\n    //     })\n    // }\n\n    respond = (response) => {\n        // var s = this.state.swiped\n        // s[idx] = response\n        // console.log(this.state.items)\n        // this.setState({swiped: s})\n        // this.handle()\n        // makePostRequest('like-product',\n            // {\n        //         img_id: this.state.items[idx],\n        //         response: response\n            // },\n        //     () => {console.log('products liked')}\n        // )\n        console.log('RESPONDING')\n        var responses = this.state.responses\n        responses.push(response)\n        console.log('responses:', responses)\n        var img_url = this.state.items[this.state.responses.length - 1]     // when no responses, get first item\n        console.log('linking img:', img_url)\n        this.setState({\n            responses//,\n            // remaining: this.state.remaining - 1\n        })\n        this.props.respond(img_url, response)\n    }\n \n    getCards = () => {\n        var cards = this.state.items.map(\n            (item, idx) => {\n                console.log('idx:', idx)\n                // console.log('remaining:', this.state.remaining)\n                var zIndex = 1 + this.state.responses.length - idx\n                console.log('zIndex:', zIndex)\n                return <Card src={item} alt=\"\" respond={this.respond} swiped={this.state.responses[idx]} active={idx == this.state.responses.length} zIndex={zIndex} />\n            }\n        )\n        return cards\n    }\n\n    render() {\n        var ready\n        if (this.props.ready == null) {                 // if certain conditions need to be met before fetching imgs (e.g. register gender on signup) then \n            ready = true\n        }\n        else {\n            ready = this.props.ready   \n        }\n        // console.log('items length:', this.state.items.length)\n        // console.log('logged in:', this.props.logged_in)\n        // console.log('ready?', ready)\n            // console.log(this.state.handlingIdx)\n            // console.log(this.props.logged_in)\n            // console.log(ready)\n        // if (this.state.handlingIdx <= 2 && this.props.logged_in && ready) {\n        if (this.state.items.length - this.state.responses.length < 3 && ready) {\n            this.getImgs()\n        }\n        return (\n            <div>\n                <div className=\"swipe_cards\">\n                    {\n                        this.state.items ?\n                        this.getCards()\n                        : <Loading />\n                    }\n                </div>\n                <div className=\"swipe_options\">\n                    <div className=\"swipe_dislike_btn\" onClick={() => {this.respond('no')}}>\n                        <img src={cross} alt=\"\" />\n                    </div>\n                    <div className=\"swipe_like_btn\" onClick={() => {this.respond('yes')}}>\n                        <img src={heart} alt=\"\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Card extends Component {\n    constructor(props) {\n        super(props)\n        this.decisionPoint = 100;\n        this.state = {\n            startX: 0,\n            swiped: null,\n            // centering: false,\n            loaded: false,\n            // style: {zIndex: this.props.zIndex}\n        }\n    }\n\n    touchStart = (e) => {\n        var startX = e.changedTouches[0].pageX\n        var startY = e.changedTouches[0].pageY\n        this.setState({startX, startY})\n    }\n\n    swipe = (e) => {\n        var curX = e.changedTouches[0].pageX \n        var deltaX = curX - this.state.startX\n        var curY = e.changedTouches[0].pageY \n        var deltaY = curY - this.state.startY\n        //console.log(`${curX} - ${this.state.startX} = ${deltaX}`)\n        this.setState({style: \n            {\n                ...this.state.style,\n                transform: `translateX(${deltaX}px) translateY(${deltaY}px) rotate(${0.1*deltaX}deg)`\n            }\n        })\n    }\n\n    let_go = (e) => {\n        var deltaX = e.changedTouches[0].pageX - this.state.startX\n        if (Math.abs(deltaX) > this.decisionPoint) {\n            window.analytics.track('image swiped on sign up')\n            if (deltaX > 0) {\n                this.props.respond('yes')\n                // this.setState({swiped: 'yes'})\n            }\n            else {\n                this.props.respond('no')\n                // this.setState({swiped: 'no'})\n            }\n        }\n        else {\n            this.setState({style: {transform: 'translateX(0vw) rotate(0deg)'}})\n        }\n        //     // this.setState({centering: 'centre'},\n        //         // this.setState({centering: false})\n        //     // )\n        //     // this.setState({style:\n        //     //     {'transform': 'translateX(0px) rotate(0deg)',}\n        //     // })\n        // }\n    }\n\n    render() {\n        console.log('swiped prop:', this.props.swiped)\n        let style = {...this.state.style}\n        if (this.props.swiped) {\n            if (this.props.swiped == 'yes') {\n                style = {\n                    ...style,\n                    transform: 'translateX(100vw) rotate(90deg)'\n                }\n            }\n            else if (this.props.swiped == 'no') {\n                style= {\n                    ...style,\n                    transform: 'translateX(-100vw) rotate(-90deg)'\n                }\n            }\n        }\n\n        console.log('style:', style)\n        if (this.props.active) {\n            var p = {\n                onTouchStart: this.touchStart,\n                onTouchEnd: this.let_go,\n                onTouchMove: this.swipe\n            }\n        }\n        style = {...style, zIndex:this.props.zIndex}\n        console.log(style)\n\n        return (\n            <div className={`swipe_card`} style={style} {...p} >\n                <img src={this.props.src} alt=\"\" onLoad={() => {this.setState({loaded: true})}}/>\n                {\n                    this.state.loaded ? \n                    null : \n                    <Loading />\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log('STATE:', state)\n    return {\n        logged_in: state.user.logged_in,\n        gender: state.user.gender,\n        swipes: state.user.swipe_responses ? state.user.swipe_responses : []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        respond: (img_url, response) => {\n            console.log('liking image:', img_url)\n            makePostRequest('like-product',\n                {\n                    img_id: img_url,\n                    response: response\n                },\n                () => {console.log('product liked')}\n            )\n            dispatch({\n                type: 'SWIPE_IMG',\n                response,\n                img_url\n            })\n        }\n    }\n}\n\nexport default Swiping = connect(mapStateToProps, mapDispatchToProps)(Swiping)"]},"metadata":{},"sourceType":"module"}