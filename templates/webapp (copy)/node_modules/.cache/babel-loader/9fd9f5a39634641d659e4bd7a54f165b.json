{"ast":null,"code":"var _jsxFileName = \"/home/ice/supermedia/webapp/src/general/form_components/TelephoneInput.js\";\nimport React, { Component } from \"react\";\nimport dropdownArrow from \"../../images/dropdownArrow.png\";\nimport \"./TelephoneInput.css\";\nimport { rgbUnit } from \"style-value-types\";\nimport Dropdown from \"./Dropdown\";\n\nclass TelephoneInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.format = () => {\n      var num = this.state.num == '' ? \"012345678901\" : this.state.num; // initially empty show 012345678901\n\n      console.log('UNFORMATTED NUM:', num);\n\n      switch (this.state.code) {\n        case \"+44\":\n          if (num.length > 10) {\n            num = num.slice(1);\n          }\n\n          break;\n\n        case \"+1\":\n          if (num.length > 10) {\n            num = num.slice(1);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      return num;\n    };\n\n    this.toggleDropdown = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.getCountries = () => {\n      const codes = {\n        \"UK\": \"+44\",\n        \"US\": \"+1\"\n      };\n      const countries = Object.keys(codes).map((key, idx) => {\n        return React.createElement(CountryCode, {\n          country: key,\n          code: codes[key],\n          onClick: this.onCountryChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      return countries;\n    };\n\n    this.onNumChange = e => {\n      var num = e.target.value;\n\n      switch (this.state.code) {\n        case \"+44\":\n          if (num.length > 10) {\n            num = num.slice(1);\n          }\n\n          break;\n\n        case \"+1\":\n          if (num.length > 10) {\n            num = num.slice(1);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        num: num\n      }, () => {\n        this.formatNum();\n      });\n    };\n\n    this.formatNum = () => {\n      var num = this.state.num;\n      num = num.replace(/[^0-9]/, '');\n      var fnum = this.state.code.slice(1) + num; // slice off country code and concatenate code and num\n\n      this.setState({\n        num: num,\n        formattedNum: fnum\n      }, () => {\n        this.validateNum();\n      });\n    };\n\n    this.validateNum = () => {\n      var num = this.state.num;\n      var valid;\n\n      switch (this.state.code) {\n        case \"+44\":\n          {\n            valid = num.length >= 10;\n          }\n\n        case \"+1\":\n          {\n            valid = num.length >= 10;\n          }\n\n        default:\n          break;\n      }\n\n      this.setState({\n        valid: valid\n      }, () => {\n        console.log('validated:', num);\n        console.log('formatted num:', this.state.formattedNum);\n        this.props.onChange(this.state.formattedNum, this.state.valid);\n      });\n    };\n\n    this.onCountryChange = code => {\n      this.setState({\n        code: code\n      }, () => {\n        this.formatNum();\n      });\n      this.toggleDropdown();\n    };\n\n    this.state = {\n      code: '+44',\n      num: '',\n      formattedNum: null,\n      dropdownOpen: false,\n      valid: false\n    };\n    this.countries = this.getCountries();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-response tel-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tel-code\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.code, React.createElement(\"img\", {\n      src: dropdownArrow,\n      alt: \"\",\n      className: \"dropdownArrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"tel-input\",\n      placeholder: this.format('0123456789'),\n      value: this.state.num == '' ? null : this.state.num,\n      onChange: this.onNumChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"country-dropdown\",\n      style: this.state.dropdownOpen ? {\n        position: \"absolute\"\n      } : {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.countries)));\n  }\n\n}\n\nexport default TelephoneInput;\n\nclass CountryCode extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getCode = () => {\n      this.props.onClick(this.props.code);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"country-block\",\n      onClick: this.getCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"UK.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"country-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.props.country), React.createElement(\"div\", {\n      className: \"country-code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.props.code));\n  }\n\n}","map":{"version":3,"sources":["/home/ice/supermedia/webapp/src/general/form_components/TelephoneInput.js"],"names":["React","Component","dropdownArrow","rgbUnit","Dropdown","TelephoneInput","constructor","props","format","num","state","console","log","code","length","slice","toggleDropdown","setState","dropdownOpen","getCountries","codes","countries","Object","keys","map","key","idx","onCountryChange","onNumChange","e","target","value","formatNum","replace","fnum","formattedNum","validateNum","valid","onChange","render","position","display","CountryCode","getCode","onClick","country"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport dropdownArrow from \"../../images/dropdownArrow.png\"\nimport \"./TelephoneInput.css\"\nimport { rgbUnit } from \"style-value-types\";\nimport Dropdown from \"./Dropdown\"\n\nclass TelephoneInput extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            code: '+44',\n            num: '',\n            formattedNum: null,\n            dropdownOpen: false,\n            valid: false\n        }\n        this.countries = this.getCountries()\n    }\n\n    format = () => {\n        var num = this.state.num == '' ? \"012345678901\" : this.state.num        // initially empty show 012345678901\n        console.log('UNFORMATTED NUM:', num)\n        switch (this.state.code) {\n            case \"+44\": \n                if (num.length > 10) {\n                    num = num.slice(1)\n                }\n                break;\n            case \"+1\":\n                if (num.length > 10) {\n                    num = num.slice(1)\n                }\n                break;\n            default:\n                break;\n        }\n        return num\n    }\n\n    toggleDropdown = () => {\n        this.setState({dropdownOpen: !this.state.dropdownOpen})\n    }\n\n    getCountries = () => {\n        const codes = {\n                \"UK\": \"+44\",\n                \"US\": \"+1\"\n            }\n        const countries = Object.keys(codes).map(\n            (key, idx) => {\n                return (\n                    <CountryCode country={key} code={codes[key]} onClick={this.onCountryChange}/>\n                )\n            }\n        )\n        return (countries)\n    }\n\n    onNumChange = (e) => {\n        var num = e.target.value\n        switch (this.state.code) {\n            case \"+44\": \n                if (num.length > 10) {\n                    num = num.slice(1)\n                }\n                break;\n            case \"+1\":\n                if (num.length > 10) {\n                    num = num.slice(1)\n                }\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            num: num\n        },\n            () => {\n                this.formatNum()\n            }\n        )\n    }\n\n    formatNum = () => {\n        var num = this.state.num\n        num = num.replace(/[^0-9]/, '')\n        var fnum = this.state.code.slice(1) + num       // slice off country code and concatenate code and num\n        this.setState({\n            num: num,\n            formattedNum: fnum\n        },\n            () => {\n                this.validateNum()\n            }\n        )\n    }\n    \n    validateNum = () => {\n        var num = this.state.num\n        var valid\n        switch (this.state.code) {\n            case \"+44\": {\n                valid = num.length >= 10\n            }\n            case \"+1\": {\n                valid = num.length >= 10\n            } \n            default:\n                break;\n        }\n        this.setState({\n            valid: valid\n        },\n            () => {\n                console.log('validated:', num)\n                console.log('formatted num:', this.state.formattedNum)\n                this.props.onChange(this.state.formattedNum, this.state.valid)\n            }\n        )\n    }\n\n    onCountryChange = (code) => {\n        this.setState({code: code},\n            () => {\n                this.formatNum()\n            }\n        )\n        this.toggleDropdown()\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"text-response tel-field\">\n                    <div className=\"tel-code\" onClick={this.toggleDropdown}>\n                        {this.state.code}\n                        <img src={dropdownArrow} alt=\"\" className=\"dropdownArrow\" />\n                    </div>\n                    <input className=\"tel-input\" placeholder={this.format('0123456789')} value={this.state.num == '' ? null : this.state.num} onChange={this.onNumChange}/>\n                    <div className=\"country-dropdown\" style={this.state.dropdownOpen ? {position: \"absolute\"} : {display: \"none\"}}>\n                        {this.countries}\n                    </div>\n                </div>\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default TelephoneInput;\n\nclass CountryCode extends Component {\n\n    getCode = () => {\n        this.props.onClick(this.props.code)\n    }\n\n    render() {\n        return (\n            <div className=\"country-block\" onClick={this.getCode}>\n                <img src='UK.png' alt=\"\" />\n                <div className=\"country-name\">\n                    {this.props.country}\n                </div>\n                <div className=\"country-code\">\n                    {this.props.code}\n                </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}