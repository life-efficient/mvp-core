{"ast":null,"code":"var _jsxFileName = \"/home/ice/test/test/src/components/MyStyle.js\";\nimport React, { Component } from \"react\";\nimport Style from \"./Style\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\nimport { makePostRequest } from \"../api_calls\";\n\nclass MyStyle extends Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"body\",\n      style: {\n        backgroundColor: 'var(--orange)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Style, {\n      styles: this.props.user.styles ? this.props.user.styles : [],\n      onChange: styles => {\n        this.props.setUserInfo({\n          styles\n        });\n        makePostRequest('update-my-details', {\n          styles\n        }, () => {\n          console.log('dets updated');\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUserInfo: update => {\n      dispatch({\n        type: \"SET_USER\",\n        update: update\n      });\n    }\n  };\n};\n\nexport default MyStyle = connect(mapStateToProps, mapDispatchToProps)(MyStyle);","map":{"version":3,"sources":["/home/ice/test/test/src/components/MyStyle.js"],"names":["React","Component","Style","connect","Navbar","makePostRequest","MyStyle","render","backgroundColor","props","user","styles","setUserInfo","console","log","mapStateToProps","state","mapDispatchToProps","dispatch","update","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5BM,EAAAA,MAAM,GAAG;AACL,WACI,0CACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACA,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,GAAyB,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,MAAzC,GAAkD,EAD1D;AAEA,MAAA,QAAQ,EAAGA,MAAD,IAAY;AAClB,aAAKF,KAAL,CAAWG,WAAX,CAAuB;AAACD,UAAAA;AAAD,SAAvB;AACAN,QAAAA,eAAe,CAAC,mBAAD,EAAsB;AAACM,UAAAA;AAAD,SAAtB,EACX,MAAM;AAACE,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA4B,SADxB,CAAf;AAGH,OAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAgBH;;AAlB2B;;AAqBhC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,IAAI,EAAEM,KAAK,CAACN;AADT,GAAP;AAGH,CAJD;;AAMA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHN,IAAAA,WAAW,EAAGO,MAAD,IAAY;AACrBD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAE,UADD;AAELD,QAAAA,MAAM,EAAEA;AAFH,OAAD,CAAR;AAIH;AANE,GAAP;AAQH,CATD;;AAWA,eAAeb,OAAO,GAAGH,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,OAA7C,CAAzB","sourcesContent":["import React, { Component } from \"react\"\nimport Style from \"./Style\"\nimport { connect } from \"react-redux\"\nimport Navbar from \"./Navbar\"\nimport { makePostRequest } from \"../api_calls\"\n\nclass MyStyle extends Component {\n    render() {\n        return (\n            <>\n                <Navbar back={true} />\n                <div className=\"body\" style={{backgroundColor: 'var(--orange)'}}>\n                    <Style \n                    styles={this.props.user.styles ? this.props.user.styles : []}\n                    onChange={(styles) => {\n                        this.props.setUserInfo({styles});\n                        makePostRequest('update-my-details', {styles}, \n                            () => {console.log('dets updated')}\n                        )\n                    }}\n                    />\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUserInfo: (update) => {\n            dispatch({\n                type: \"SET_USER\",\n                update: update\n            })\n        }\n    }\n}\n\nexport default MyStyle = connect(mapStateToProps, mapDispatchToProps)(MyStyle)\n"]},"metadata":{},"sourceType":"module"}