{"ast":null,"code":"import _defineProperty from \"/home/ice/tempmvp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ice/tempmvp/src/stylistComponents/BrandSearch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { makeGetRequest, makePostRequest } from \"../api_calls\";\nimport PotentialRecommendation from \"./PotentialRecommendation\";\nimport queryString from \"query-string\";\nimport { connect } from \"react-redux\";\nimport sendIcon from \"../images/icons/send.svg\";\nimport Loading from \"../general/Loading\";\n\nclass ProductSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRecommended = () => {\n      makeGetRequest(\"admin-recommendations?user_id=\".concat(this.state.user_id), data => {\n        data = data.map(item => {\n          return item.product_id;\n        });\n        console.log('ALREADY RECOMMENDED:', data);\n        this.setState({\n          already_recommended: data\n        });\n      });\n    };\n\n    this.getOptions = section => {\n      var options = this.state.all_options[section].map((item, idx) => {\n        var checked = this.state[section].includes(item);\n        return React.createElement(\"label\", {\n          for: item,\n          className: \" tag\",\n          style: checked ? {\n            opacity: 1\n          } : {\n            opacity: 0.5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: item,\n          className: \"radio_btn\",\n          type: \"checkbox\",\n          value: item,\n          name: section,\n          checked: checked,\n          onChange: this.onRadioChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), item.replace(/_/g, ' '), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }));\n      });\n      return options;\n    };\n\n    this.getBrands = () => {\n      console.log('getting brands');\n      makeGetRequest('admin-brands', brands => {\n        brands = brands.body;\n        brands = JSON.parse(brands);\n        brands = brands.reduce((out, brand) => {\n          out = [...out, brand.brand];\n          return out;\n        }, []);\n        brands.sort();\n        console.log('THE BRANDS:', brands);\n        this.setState({\n          all_options: _objectSpread({}, this.state.all_options, {\n            brands\n          })\n        }, () => {\n          console.log('STATE:', this.state);\n        });\n      });\n    };\n\n    this.getProducts = () => {\n      console.log('getting products'); // makeGetRequest(`admin-recommendation-prompts?user_id=${this.state.user_id}`,\n      //     (data) => {\n      //         console.log('PRODUCTS:', data)\n      //         this.setState({\n      //             products: data\n      //         })\n      //     }\n      // )\n\n      makePostRequest(\"admin-recommendation-prompts?user_id=\".concat(this.state.user_id), this.state, data => {\n        data = data.json() //body\n        .then(data => {\n          console.log('some PRODUCTS:', data);\n          this.setState({\n            products: data\n          });\n        });\n      });\n    };\n\n    this.onRadioChange = e => {\n      console.log('changing radio');\n      console.log(e.target.name); //e.persist()\n\n      const name = e.target.name;\n      const key = e.target.value;\n      const checked = e.target.checked;\n      var options = this.state[name];\n\n      if (options.includes(e.target.value)) {\n        // if checked then remove\n        options = options.filter(op => {\n          return op != e.target.value;\n        });\n      } else {\n        // if unchecked then append\n        options = [...options, e.target.value];\n      }\n\n      this.setState({\n        [name]: options\n      }, () => {\n        this.getProducts();\n        console.log(this.state[name]); // makePostRequest(`admin-user-info?user_id=${this.state.user_id}`, {styles: this.state.styles, brands: this.state.brands},\n        //     () => {\n        //         console.log('updated user info')\n        //         this.getProducts()\n        //     }\n        // )\n      });\n    };\n\n    this.handleRequestChange = e => {\n      this.setState({\n        brand_request: e.target.value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.submitRequest = () => {\n      makePostRequest('feature-request', {\n        type: 'new brand request',\n        request: this.state.brand_request\n      }, () => {\n        console.log('brand requested');\n        this.setState({\n          brand_request: ''\n        });\n      });\n    };\n\n    var params = queryString.parse(window.location.search);\n    this.state = {\n      user_id: params.sub,\n      products: [],\n      brands: [],\n      all_options: {\n        brands: []\n      },\n      brand_request: ''\n    };\n    this.getBrands();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Recommend products I've found already\"), React.createElement(\"div\", {\n      className: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"I've found all the products from these brands so you don't have to upload them!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.getOptions('brands')), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Want a brand that's not here?\")), React.createElement(\"div\", {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.brand_request,\n      onChange: this.handleRequestChange,\n      className: \"text-response\",\n      placeholder: \"Enter the brand here...\",\n      style: {\n        fontSize: '13px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submitRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.request_loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: sendIcon,\n      style: {\n        height: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"potential-recs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.products.map((product, idx) => {\n      return React.createElement(PotentialRecommendation, {\n        rec: product,\n        key: idx,\n        user_id: this.state.user_id,\n        getRecommended: this.props.getRecommended,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }); // return <PotentialRecommendation rec={product} key={idx} already_recommended={this.state.already_recommended.includes(product.product_id)} user_id={this.state.user_id} />\n    })));\n  }\n\n}\n\nexport default ProductSearch;","map":{"version":3,"sources":["/home/ice/tempmvp/src/stylistComponents/BrandSearch.js"],"names":["React","Component","makeGetRequest","makePostRequest","PotentialRecommendation","queryString","connect","Loading","ProductSearch","constructor","props","getRecommended","state","user_id","data","map","item","product_id","console","log","setState","already_recommended","getOptions","section","options","all_options","idx","checked","includes","opacity","onRadioChange","replace","getBrands","brands","body","JSON","parse","reduce","out","brand","sort","getProducts","json","then","products","e","target","name","key","value","filter","op","handleRequestChange","brand_request","submitRequest","type","request","params","window","location","search","sub","render","fontSize","request_loading","sendIcon","height","product"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { makeGetRequest, makePostRequest } from \"../api_calls\"\nimport PotentialRecommendation from \"./PotentialRecommendation\"\nimport queryString from \"query-string\"\nimport { connect } from \"react-redux\"\nimport sendIcon from \"../images/icons/send.svg\"\nimport Loading from \"../general/Loading\"\n\nclass ProductSearch extends Component {\n    constructor(props) {\n        super(props)\n        var params = queryString.parse(window.location.search)\n        this.state = {\n            user_id: params.sub,\n            products: [],\n            brands: [],\n            all_options: {\n                brands: []\n            },\n            brand_request: ''\n        }\n        this.getBrands()\n    }\n\n    getRecommended = () => {\n        makeGetRequest(`admin-recommendations?user_id=${this.state.user_id}`,\n            (data) => {\n                data = data.map(\n                    (item) => {\n                        return item.product_id\n                    }\n                )\n                console.log('ALREADY RECOMMENDED:', data)\n                this.setState({already_recommended: data})\n            }\n        )\n    }\n\n    getOptions = (section) => {\n        var options = this.state.all_options[section].map(\n            (item, idx) => {\n                var checked = this.state[section].includes(item)\n                return (\n                    <label for={item} className=\" tag\" style={checked ? {opacity: 1} : {opacity: 0.5}}>\n                        <input id={item} className=\"radio_btn\" type=\"checkbox\" value={item} name={section} checked={checked} onChange={this.onRadioChange}/>\n                        {item.replace(/_/g, ' ')}\n                        <br/>\n                    </label>\n                )\n            }\n        )\n        return options\n    }\n\n    getBrands = () =>{\n        console.log('getting brands')\n        makeGetRequest('admin-brands',\n            (brands) => {\n                brands = brands.body\n                brands = JSON.parse(brands)\n                brands = brands.reduce(\n                    (out, brand) => {\n                        out = [...out, brand.brand]\n                        return out\n                    },\n                    []\n                )\n                brands.sort()\n                console.log('THE BRANDS:', brands)\n                this.setState({\n                    all_options: {\n                        ...this.state.all_options,\n                        brands\n                    }\n                },\n                    () => {\n                        console.log('STATE:', this.state)\n                    }\n                )\n            }\n        )\n    }\n\n    getProducts = () => {\n        console.log('getting products')\n        // makeGetRequest(`admin-recommendation-prompts?user_id=${this.state.user_id}`,\n        //     (data) => {\n        //         console.log('PRODUCTS:', data)\n        //         this.setState({\n        //             products: data\n        //         })\n        //     }\n        // )\n        makePostRequest(`admin-recommendation-prompts?user_id=${this.state.user_id}`, this.state,\n            (data) => {\n                data = data.json()//body\n                .then(\n                    (data) =>{\n                        console.log('some PRODUCTS:', data)\n                        this.setState({\n                            products: data\n                        })\n                    }\n                )\n            }\n        )\n    }\n\n    onRadioChange = (e) => {\n        console.log('changing radio')\n        console.log(e.target.name)\n        //e.persist()\n        const name = e.target.name\n        const key = e.target.value\n        const checked = e.target.checked\n        var options = this.state[name]\n        if (options.includes(e.target.value)) {     // if checked then remove\n            options = options.filter(op => {return op != e.target.value})\n        }\n        else {                                      // if unchecked then append\n            options = [...options, e.target.value]\n        }\n        this.setState({\n            [name]: options\n        },\n            () => {\n                this.getProducts()\n                console.log(this.state[name])\n                // makePostRequest(`admin-user-info?user_id=${this.state.user_id}`, {styles: this.state.styles, brands: this.state.brands},\n                //     () => {\n                //         console.log('updated user info')\n                //         this.getProducts()\n                //     }\n                // )\n            }    \n        )\n    }\n\n    handleRequestChange = (e) => {\n        this.setState({brand_request: e.target.value},\n            () => {console.log(this.state)}    \n        )\n    }\n\n    submitRequest = () => {\n        makePostRequest('feature-request', {type: 'new brand request', request: this.state.brand_request},\n            () => {\n                console.log('brand requested')\n                this.setState({brand_request: ''})\n            }\n        )\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"panel\">\n                <div className=\"medium\">\n                    Recommend products I've found already\n                </div>\n                <div className=\"small\">\n                    I've found all the products from these brands so you don't have to upload them!\n                </div>\n                <br/>\n                <div className=\"tags\">\n                    {this.getOptions('brands')}       \n                </div>\n                <br/>\n                <br/>\n                <div>\n                    <div><strong>Want a brand that's not here?</strong></div>\n                    <div className=\"searchbar\">\n                        <input value={this.state.brand_request} onChange={this.handleRequestChange} className=\"text-response\" placeholder='Enter the brand here...' style={{fontSize: '13px'}} />\n                        <button onClick={this.submitRequest}>\n                            {\n                                this.state.request_loading ?\n                                <Loading />\n                                :\n                                <img src={sendIcon} style={{height: '30px'}} />\n                            }\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"potential-recs\">\n                {\n                    this.state.products.map(\n                        (product, idx) => {\n                            return <PotentialRecommendation rec={product} key={idx} user_id={this.state.user_id} getRecommended={this.props.getRecommended}/>\n                            // return <PotentialRecommendation rec={product} key={idx} already_recommended={this.state.already_recommended.includes(product.product_id)} user_id={this.state.user_id} />\n                        }\n                    )\n                }\n            </div>\n            </>\n        )\n    }\n}\n\nexport default ProductSearch"]},"metadata":{},"sourceType":"module"}